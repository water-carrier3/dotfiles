!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Ctags	k,kind	/kind definitions/
!_TAG_KIND_DESCRIPTION!Ctags	l,langdef	/language definitions/
!_TAG_KIND_DESCRIPTION!Iniconf	k,key	/keys/
!_TAG_KIND_DESCRIPTION!Iniconf	s,section	/sections/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!Vim	C,constant	/constant definitions/
!_TAG_KIND_DESCRIPTION!Vim	a,augroup	/autocommand groups/
!_TAG_KIND_DESCRIPTION!Vim	c,command	/user-defined commands/
!_TAG_KIND_DESCRIPTION!Vim	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!Vim	m,map	/maps/
!_TAG_KIND_DESCRIPTION!Vim	n,filename	/vimball filename/
!_TAG_KIND_DESCRIPTION!Vim	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Ctags	0.0	/current.age/
!_TAG_PARSER_VERSION!Iniconf	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!Vim	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/burp/dotfiles1/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
"	vim/.config/nvim/init.vim	/^vnoremap <expr> "   (visualmode() == "\\<C-V>" ? ':norm "<cr>gv' : 'c""<Esc>hpgv')$/;"	m
#	vim/.config/nvim/init.vim	/^vnoremap <expr> #   (visualmode() == "\\<C-V>" ? ':norm i#<cr>gv' : 'c##<Esc>hpgv')$/;"	m
$BASH_ENV	vim/.config/nvim/init.vim	/^    let $BASH_ENV="~\/.bash_aliases"$/;"	v
$NVIM_TUI_ENABLE_TRUE_COLOR	vim/.config/nvim/init.vim	/^let $NVIM_TUI_ENABLE_TRUE_COLOR=1$/;"	v
'	vim/.config/nvim/init.vim	/^vnoremap '      di''<Esc>hpgv$/;"	m
'	vim/.config/nvim/init.vim	/^vnoremap <expr> '   (visualmode() == "\\<C-V>" ? ":norm i'<cr>gv" : "c''<Esc>hpgv")$/;"	m
(	vim/.config/nvim/init.vim	/^vnoremap (      di()<Esc>hpgv $/;"	m
+	vim/.config/nvim/init.vim	/^nnoremap + <C-a>$/;"	m
+	vim/.config/nvim/init.vim	/^vnoremap + <C-a>gv$/;"	m
-	vim/.config/nvim/init.vim	/^nnoremap - <C-x>$/;"	m
-	vim/.config/nvim/init.vim	/^vnoremap - <C-x>gv$/;"	m
--	vim/.config/nvim/init.vim	/^vnoremap <expr> --   (visualmode() == "\\<C-V>" ? ':norm i--<cr>gv' : 'c--[[<enter><esc>pi<enter/;"	m
-p	install.sh	/^alias -p;$/;"	a
/	vim/.config/nvim/init.vim	/^vnoremap \/ y\/<C-r>0$/;"	m
//	vim/.config/nvim/init.vim	/^vnoremap <expr> \/\/   (visualmode() == "\\<C-V>" ? ':norm i\/\/<cr>gv' : 'c\/*<enter><esc>pi<en/;"	m
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:completions.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:ctags.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:envvars.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:fzf-alias.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:gpg-alias.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:gpg.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:group.fzf-all
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:group.gpg-all
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:group.keybinds-all
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:group.ranger-all
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:group.tmux-all
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:group.vim-all
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:keybinds-bash.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:keybinds.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:kitty.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:lazygit-alias.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:lazygit.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:ranger-aliases.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:ranger.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:readline.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:tmux-alias.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:tmux.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:vim-alias.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:vim-completion.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:vim.src
0	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:xterm.src
1	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
1	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:fzf-alias.src
1	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:group.fzf-all
1	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:group.gpg-all
1	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:group.keybinds-all
1	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:group.ranger-all
1	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:group.tmux-all
1	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:group.vim-all
1	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:keybinds.src
1	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:kitty.src
1	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:ranger.src
1	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:vim.src
10	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
11	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
12	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
13	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
14	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
15	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
2	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
2	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:fzf-alias.src
2	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:group.vim-all
2	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:ranger.src
2	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:vim.src
3	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
4	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
5	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
6	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
7	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
8	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
9	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	array:aliases.src
<	vim/.config/nvim/init.vim	/^vnoremap <      di<><Esc>hpgv$/;"	m
<A-+>	vim/.config/nvim/init.vim	/^inoremap <A-+> <C-a>$/;"	m
<A-->	vim/.config/nvim/init.vim	/^inoremap <A--> <C-x>$/;"	m
<A-Backspace>	vim/.config/nvim/init.vim	/^inoremap <A-Backspace>      <Esc>"_dd<Up>$a$/;"	m
<A-Backspace>	vim/.config/nvim/init.vim	/^nnoremap <A-Backspace>      "_dd<Up>\$$/;"	m
<A-Down>	vim/.config/nvim/init.vim	/^inoremap    <A-Down> <Esc>:m .+1<CR>a$/;"	m
<A-Down>	vim/.config/nvim/init.vim	/^nnoremap    <A-Down> :m .+1<CR>$/;"	m
<A-Down>	vim/.config/nvim/init.vim	/^vnoremap    <A-Down> :m '>+1<CR>gv$/;"	m
<A-Enter>	vim/.config/nvim/init.vim	/^inoremap <A-Enter>      <Esc>0i<enter>$/;"	m
<A-Enter>	vim/.config/nvim/init.vim	/^nnoremap <A-Enter>      0i<enter><up><esc>$/;"	m
<A-Enter>	vim/.config/nvim/init.vim	/^vnoremap <A-Enter>      <Esc>`<i<Enter><Esc>gv$/;"	m
<A-J>	vim/.config/nvim/init.vim	/^inoremap    <A-J> <Esc>:m .+1<CR>a$/;"	m
<A-J>	vim/.config/nvim/init.vim	/^nnoremap    <A-J> :m .+1<CR>$/;"	m
<A-J>	vim/.config/nvim/init.vim	/^vnoremap    <A-J> :m '>+1<CR>gv$/;"	m
<A-K>	vim/.config/nvim/init.vim	/^inoremap    <A-K>   <Esc>:m .-2<CR>a$/;"	m
<A-K>	vim/.config/nvim/init.vim	/^nnoremap    <A-K>   :m .-2<CR>$/;"	m
<A-K>	vim/.config/nvim/init.vim	/^vnoremap    <A-K>   :m '<-2<CR>gv$/;"	m
<A-Left>	vim/.config/nvim/init.vim	/^inoremap <expr> <A-Left>    (col('.') ==? 1 ? '<Up><C-\\><C-o>0' : '<C-\\><C-o>0')$/;"	m
<A-Left>	vim/.config/nvim/init.vim	/^nnoremap <expr> <A-Left>    (col(".") ==? 1 ? '<Up>0' : '0')$/;"	m
<A-Left>	vim/.config/nvim/init.vim	/^vnoremap <expr> <A-Left>    (col(".") ==? 1 ? '<Up>0' : '0')$/;"	m
<A-Right>	vim/.config/nvim/init.vim	/^inoremap <expr> <A-Right>   LastCheck() ? '<C-o><Down><C-\\><C-o>$<Right>' : '<C-\\><C-o>$<Right/;"	m
<A-Right>	vim/.config/nvim/init.vim	/^vnoremap <expr> <A-Right>   LastCheck() ? '<Down>$<Right>' : '$<Right>'$/;"	m
<A-Up>	vim/.config/nvim/init.vim	/^inoremap    <A-Up>   <Esc>:m .-2<CR>a$/;"	m
<A-Up>	vim/.config/nvim/init.vim	/^nnoremap    <A-Up>   :m .-2<CR>$/;"	m
<A-Up>	vim/.config/nvim/init.vim	/^vnoremap    <A-Up>   :m '<-2<CR>gv$/;"	m
<A-a>	vim/.config/nvim/init.vim	/^inoremap <A-a> <Esc>l$/;"	m
<A-a>	vim/.config/nvim/init.vim	/^nnoremap <A-a> R$/;"	m
<A-a>	vim/.config/nvim/init.vim	/^vnoremap <A-a> R$/;"	m
<A-d>	vim/.config/nvim/init.vim	/^inoremap <A-d> <Esc>cc$/;"	m
<A-d>	vim/.config/nvim/init.vim	/^nnoremap <A-d> cc$/;"	m
<A-d>	vim/.config/nvim/init.vim	/^vnoremap <A-d> c$/;"	m
<A-right>	vim/.config/nvim/init.vim	/^nnoremap <expr> <A-right>   LastCheck() ? '<Down>$<Right>' : '$<Right>'$/;"	m
<A-s>	vim/.config/nvim/init.vim	/^inoremap <A-s> <C-o><C-q>$/;"	m
<A-s>	vim/.config/nvim/init.vim	/^nnoremap <A-s> <C-q>$/;"	m
<A-s>	vim/.config/nvim/init.vim	/^vnoremap <A-s> <C-q> $/;"	m
<BackSpace>	vim/.config/nvim/init.vim	/^nnoremap <expr><BackSpace>    (col(".") ==? 1 ? 'i<BackSpace><esc>' : '"_dh')$/;"	m
<Backspace>	vim/.config/nvim/init.vim	/^inoremap <expr> <Backspace>    (mode() ==# 'R' && col('.') ==? 1 ? '<esc>"_dhR' : mode() ==# 'R'/;"	m
<Backspace>	vim/.config/nvim/init.vim	/^vnoremap <Backspace>   "_d$/;"	m
<C-A-a>	vim/.config/nvim/init.vim	/^inoremap <C-A-a> <Esc>$/;"	m
<C-A-a>	vim/.config/nvim/init.vim	/^nnoremap <C-A-a> gR$/;"	m
<C-A-a>	vim/.config/nvim/init.vim	/^vnoremap <C-A-a> <Esc>gR $/;"	m
<C-A-s>	vim/.config/nvim/init.vim	/^inoremap <C-A-s> <C-o>V$/;"	m
<C-A-s>	vim/.config/nvim/init.vim	/^nnoremap <C-A-s> V$/;"	m
<C-A-s>	vim/.config/nvim/init.vim	/^vnoremap <C-A-s> <Esc> $/;"	m
<C-Backspace>	vim/.config/nvim/init.vim	/^inoremap <expr> <C-Backspace>  (col(".") ==? 1 ? '<BackSpace>' : '<esc>"_dgei')$/;"	m
<C-Backspace>	vim/.config/nvim/init.vim	/^nnoremap <expr> <C-Backspace>  (col(".") ==? 1 ? '<BackSpace>' : 'h"_dge')$/;"	m
<C-Down>	vim/.config/nvim/init.vim	/^inoremap    <C-Down> <C-\\><C-o>}<C-\\><C-o>$/;"	m
<C-Down>	vim/.config/nvim/init.vim	/^nnoremap    <C-Down> }$/;"	m
<C-Down>	vim/.config/nvim/init.vim	/^vnoremap    <C-Down> }$/;"	m
<C-Enter>	vim/.config/nvim/init.vim	/^inoremap <C-Enter>      <Esc>o$/;"	m
<C-Enter>	vim/.config/nvim/init.vim	/^nnoremap <C-Enter>      o<esc>$/;"	m
<C-Enter>	vim/.config/nvim/init.vim	/^vnoremap <C-Enter>      o<esc><enter>gv$/;"	m
<C-Left>	vim/.config/nvim/init.vim	/^inoremap <C-Left>   <C-\\><C-o>B<C-\\><C-o>h$/;"	m
<C-Left>	vim/.config/nvim/init.vim	/^nnoremap <C-Left>   Bh$/;"	m
<C-Left>	vim/.config/nvim/init.vim	/^vnoremap <C-Left>   Bh$/;"	m
<C-Right>	vim/.config/nvim/init.vim	/^inoremap <C-Right>  <C-\\><C-o>E<C-\\><C-o>l$/;"	m
<C-Right>	vim/.config/nvim/init.vim	/^nnoremap <C-Right>  El$/;"	m
<C-Right>	vim/.config/nvim/init.vim	/^vnoremap <C-Right>  El$/;"	m
<C-S-Down>	vim/.config/nvim/init.vim	/^    inoremap <silent><C-S-Down> <esc>:<C-u>TmuxKittyNavigateDown<cr>i$/;"	m
<C-S-Down>	vim/.config/nvim/init.vim	/^    nnoremap <silent><C-S-Down> :<C-u>TmuxKittyNavigateDown<cr>$/;"	m
<C-S-Down>	vim/.config/nvim/init.vim	/^    vnoremap <silent><C-S-Down> :<C-u>TmuxKittyNavigateDown<cr>gv$/;"	m
<C-S-Left>	vim/.config/nvim/init.vim	/^    inoremap <silent><C-S-Left> <esc>:<C-u>TmuxKittyNavigateLeft<cr>i$/;"	m
<C-S-Left>	vim/.config/nvim/init.vim	/^    nnoremap <silent><C-S-Left> :<C-u>TmuxKittyNavigateLeft<cr>$/;"	m
<C-S-Left>	vim/.config/nvim/init.vim	/^    vnoremap <silent><C-S-Left> :<C-u>TmuxKittyNavigateLeft<cr>gv$/;"	m
<C-S-Right>	vim/.config/nvim/init.vim	/^    inoremap <silent><C-S-Right> <esc>:<C-u>TmuxKittyNavigateRight<cr>i$/;"	m
<C-S-Right>	vim/.config/nvim/init.vim	/^    nnoremap <silent><C-S-Right> :<C-u>TmuxKittyNavigateRight<cr>$/;"	m
<C-S-Right>	vim/.config/nvim/init.vim	/^    vnoremap <silent><C-S-Right> :<C-u>TmuxKittyNavigateRight<cr>gv $/;"	m
<C-S-Space>	vim/.config/nvim/init.vim	/^    inoremap <silent><C-S-Space> <C-\\><C-o><C-u>FzfPreviewAllBuffers<CR>$/;"	m
<C-S-Space>	vim/.config/nvim/init.vim	/^    nnoremap <silent><C-S-Space> :<C-u>FzfPrevieimport_moduleBuffers<CR> $/;"	m
<C-S-Space>	vim/.config/nvim/init.vim	/^    vnoremap <silent><C-S-Space> <esc>:<C-u>FzfPreviewAllBuffers<CR>gv$/;"	m
<C-S-Space>	vim/.config/nvim/init.vim	/^inoremap <silent><C-S-Space> <C-\\><C-o>:Windows<cr>$/;"	m
<C-S-Space>	vim/.config/nvim/init.vim	/^nnoremap <silent><C-S-Space> :Windows<cr>$/;"	m
<C-S-Space>	vim/.config/nvim/init.vim	/^vnoremap <silent><C-S-Space> <esc>:Windows<cr>gv$/;"	m
<C-S-Tab>	vim/.config/nvim/init.vim	/^inoremap <silent><C-S-Tab> <C-\\><C-o>:bprev<cr>$/;"	m
<C-S-Tab>	vim/.config/nvim/init.vim	/^nnoremap <silent><C-S-Tab> :bprev<cr>$/;"	m
<C-S-Tab>	vim/.config/nvim/init.vim	/^vnoremap <silent><C-S-Tab> <esc>:bprev<cr>$/;"	m
<C-S-Up>	vim/.config/nvim/init.vim	/^    inoremap <silent><C-S-Up> <esc>:<C-u>TmuxKittyNavigateUp<cr>i$/;"	m
<C-S-Up>	vim/.config/nvim/init.vim	/^    nnoremap <silent><C-S-Up> :<C-u>TmuxKittyNavigateUp<cr>$/;"	m
<C-S-Up>	vim/.config/nvim/init.vim	/^    vnoremap <silent><C-S-Up> :<C-u>TmuxKittyNavigateUp<cr>gv$/;"	m
<C-Tab>	vim/.config/nvim/init.vim	/^inoremap <silent><C-Tab> <C-\\><C-o>:bnext<cr>$/;"	m
<C-Tab>	vim/.config/nvim/init.vim	/^nnoremap <silent><C-Tab> :bnext<cr>$/;"	m
<C-Tab>	vim/.config/nvim/init.vim	/^vnoremap <silent><C-Tab> <esc>:bnext<cr>$/;"	m
<C-Tab>a	vim/.config/nvim/init.vim	/^    nnoremap <silent><nowait> <C-Tab>a  :<C-u>CocList diagnostics<cr>$/;"	m
<C-Tab>c	vim/.config/nvim/init.vim	/^    nnoremap <silent><nowait> <C-Tab>c  :<C-u>CocList commands<cr>$/;"	m
<C-Tab>e	vim/.config/nvim/init.vim	/^    nnoremap <silent><nowait> <C-Tab>e  :<C-u>CocList extensions<cr>$/;"	m
<C-Tab>j	vim/.config/nvim/init.vim	/^    nnoremap <silent><nowait> <C-Tab>j  :<C-u>CocNext<CR>$/;"	m
<C-Tab>k	vim/.config/nvim/init.vim	/^    nnoremap <silent><nowait> <C-Tab>k  :<C-u>CocPrev<CR>$/;"	m
<C-Tab>o	vim/.config/nvim/init.vim	/^    nnoremap <silent><nowait> <C-Tab>o  :<C-u>CocList outline<cr>$/;"	m
<C-Tab>p	vim/.config/nvim/init.vim	/^    nnoremap <silent><nowait> <C-Tab>p  :<C-u>CocListResume<CR>$/;"	m
<C-Tab>s	vim/.config/nvim/init.vim	/^    nnoremap <silent><nowait> <C-Tab>s  :<C-u>CocList -I symbols<cr>$/;"	m
<C-Up>	vim/.config/nvim/init.vim	/^inoremap    <C-Up> <C-\\><C-o>{<C-\\><C-o>$/;"	m
<C-Up>	vim/.config/nvim/init.vim	/^nnoremap    <C-Up> {$/;"	m
<C-Up>	vim/.config/nvim/init.vim	/^vnoremap    <C-Up> {$/;"	m
<C-a>	vim/.config/nvim/init.vim	/^inoremap <C-a> <esc>l$/;"	m
<C-a>	vim/.config/nvim/init.vim	/^nnoremap <C-a> i$/;"	m
<C-a>	vim/.config/nvim/init.vim	/^vnoremap <C-a> i$/;"	m
<C-c>	vim/.config/nvim/init.vim	/^cnoremap <C-c> <C-f>$/;"	m
<C-c>	vim/.config/nvim/init.vim	/^inoremap <silent><C-c>   <C-\\><C-o>"+<C-\\><C-o>ywg$/;"	m
<C-c>	vim/.config/nvim/init.vim	/^nnoremap <silent><C-c> "+^y_$/;"	m
<C-c>	vim/.config/nvim/init.vim	/^vnoremap <C-c> "+y$/;"	m
<C-d>	vim/.config/nvim/init.vim	/^inoremap <expr> <C-d>   (col(".") ==? 1 ? '<C-\\><C-o>daw' : '<C-\\><C-o>diw')$/;"	m
<C-d>	vim/.config/nvim/init.vim	/^nnoremap <C-d>  (col(".") ==? 1 ? '<C-\\><C-o>daw' : '<C-\\><C-o>diw')$/;"	m
<C-d>	vim/.config/nvim/init.vim	/^vnoremap <C-d>  d $/;"	m
<C-e>	vim/.config/nvim/init.vim	/^inoremap <C-e> <C-\\><C-o>:e $/;"	m
<C-e>	vim/.config/nvim/init.vim	/^nnoremap <C-e> :e $/;"	m
<C-e>	vim/.config/nvim/init.vim	/^vnoremap <C-e> y:e<C-r>"$/;"	m
<C-f>	vim/.config/nvim/init.vim	/^    inoremap <silent><C-f> <C-\\><C-o>:FzfPreviewLines<cr>$/;"	m
<C-f>	vim/.config/nvim/init.vim	/^    nnoremap <silent><C-f> :FzfPreviewLines<cr>$/;"	m
<C-f>	vim/.config/nvim/init.vim	/^    vnoremap <silent><C-f> y<Esc>:FzfPreviewLines --add-fzf-arg=--query="<C-r>=expand('<cword>')/;"	m
<C-h>	vim/.config/nvim/init.vim	/^cnoremap <C-h> <C-e><C-u>nohl<CR>:<Esc>$/;"	m
<C-h>	vim/.config/nvim/init.vim	/^inoremap <C-h> <C-\\><C-o>:.,$s,,,gc<Left><Left><Left><Left>$/;"	m
<C-h>	vim/.config/nvim/init.vim	/^nnoremap <C-h> :.,$s,,,gc<Left><Left><Left><Left>$/;"	m
<C-h>	vim/.config/nvim/init.vim	/^vnoremap <C-h> y:.,$s,<C-r>",,gc<Left><Left><Left>$/;"	m
<C-l>	vim/.config/nvim/init.vim	/^inoremap <silent> <C-l> <C-\\><C-o>:if (hlstate == 0) \\| nohlsearch \\| else \\| set hlsearch \\/;"	m
<C-l>	vim/.config/nvim/init.vim	/^nnoremap <silent> <C-l> :if (hlstate == 0) \\| nohlsearch \\| else \\| set hlsearch \\| endif \\/;"	m
<C-l>	vim/.config/nvim/init.vim	/^vnoremap <silent> <C-l> <Esc>:if (hlstate == 0) \\| nohlsearch \\| else \\| set hlsearch \\| end/;"	m
<C-n>	vim/.config/nvim/init.vim	/^    inoremap <C-n> <C-\\><C-o>:NERDTreeToggle<CR>$/;"	m
<C-n>	vim/.config/nvim/init.vim	/^    nnoremap <C-n> :NERDTreeToggle<CR>$/;"	m
<C-n>	vim/.config/nvim/init.vim	/^    vnoremap <C-n> :NERDTreeToggle<CR>$/;"	m
<C-q>	vim/.config/nvim/init.vim	/^inoremap <silent><C-q> <Esc>:call CloseWindow()<CR>$/;"	m
<C-q>	vim/.config/nvim/init.vim	/^nnoremap <silent><C-q> :call CloseWindow()<Enter>$/;"	m
<C-q>	vim/.config/nvim/init.vim	/^vnoremap <silent><C-q> <Esc>:call CloseWindow()<CR>$/;"	m
<C-r>	vim/.config/nvim/init.vim	/^inoremap <C-r> <C-\\><C-o>:redo<CR>$/;"	m
<C-r>	vim/.config/nvim/init.vim	/^nnoremap <C-r> :redo<CR>$/;"	m
<C-r>	vim/.config/nvim/init.vim	/^vnoremap <C-r> <Esc>:redo<CR>gv $/;"	m
<C-s>	vim/.config/nvim/init.vim	/^inoremap <C-s> <C-\\><C-o>:write!<CR>$/;"	m
<C-s>	vim/.config/nvim/init.vim	/^nnoremap <C-s> :write!<CR>$/;"	m
<C-s>	vim/.config/nvim/init.vim	/^vnoremap <C-s> <Esc>:write!<CR>gv$/;"	m
<C-space>	vim/.config/nvim/init.vim	/^      inoremap <silent><expr> <C-space> coc#refresh()$/;"	m
<C-v>	vim/.config/nvim/init.vim	/^cnoremap <C-v> <C-r><C-o>"$/;"	m
<C-v>	vim/.config/nvim/init.vim	/^inoremap <silent> <C-v> <C-\\><C-o>"+P$/;"	m
<C-v>	vim/.config/nvim/init.vim	/^nnoremap <silent><C-v> "+Pl$/;"	m
<C-v>	vim/.config/nvim/init.vim	/^vnoremap <silent> <C-v> "+Pl$/;"	m
<C-x><Down>	vim/.config/nvim/init.vim	/^inoremap <silent><C-x><Down> <C-\\><C-o>:split<cr>$/;"	m
<C-x><Down>	vim/.config/nvim/init.vim	/^nnoremap <silent><C-x><Down> :split<cr>$/;"	m
<C-x><Down>	vim/.config/nvim/init.vim	/^nnoremap <silent><C-x><Down> :vertical sb<cr>$/;"	m
<C-x><Down>	vim/.config/nvim/init.vim	/^vnoremap <silent><C-x><Down> <esc>:split<cr>gv$/;"	m
<C-z>	vim/.config/nvim/init.vim	/^inoremap <C-z> <C-\\><C-o>:u<CR>$/;"	m
<C-z>	vim/.config/nvim/init.vim	/^nnoremap <C-z> u$/;"	m
<C-z>	vim/.config/nvim/init.vim	/^vnoremap <C-z> u $/;"	m
<CR>	vim/.config/nvim/init.vim	/^    inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()$/;"	m
<Delete>	vim/.config/nvim/init.vim	/^nnoremap <Delete> i<Delete><Esc>$/;"	m
<Down>	vim/.config/nvim/init.vim	/^inoremap <expr> <Down> (getline(".")[col(".")-1] != "" ? '<C-o>g<Down>' : '<Down>')$/;"	m
<Down>	vim/.config/nvim/init.vim	/^nnoremap <expr> <Down> (getline(".")[col(".")-1] != "" ? 'g<Down>' : '<Down>')$/;"	m
<Down>	vim/.config/nvim/init.vim	/^vnoremap <expr> <Down> (getline(".")[col(".")-1] != "" ? 'g<Down>' : '<Down>')$/;"	m
<Enter>	vim/.config/nvim/init.vim	/^nnoremap <Enter> i<Enter><Esc>$/;"	m
<Esc>	vim/.config/nvim/init.vim	/^cnoremap <silent><Esc> <Esc>:nohl<CR>$/;"	m
<Esc>	vim/.config/nvim/init.vim	/^nnoremap <silent><Esc> :nohl<CR>$/;"	m
<F2>	vim/.config/nvim/init.vim	/^    inoremap <silent><F2>   <Esc>:RangerWorkingDirectory<CR>$/;"	m
<F2>	vim/.config/nvim/init.vim	/^    nnoremap <silent><F2>   :RangerWorkingDirectory<CR>$/;"	m
<F2>	vim/.config/nvim/init.vim	/^    vnoremap <silent><F2>   <Esc>:RangerWorkingDirectory<CR>$/;"	m
<F3>	vim/.config/nvim/init.vim	/^    inoremap <F3>   <Esc>:LazyGit<CR>a$/;"	m
<F3>	vim/.config/nvim/init.vim	/^    nnoremap <F3>   :LazyGit<CR>$/;"	m
<F3>	vim/.config/nvim/init.vim	/^    vnoremap <F3>   :LazyGit<CR>gv$/;"	m
<F4>	vim/.config/nvim/init.vim	/^    inoremap <F4>   <Esc>:Telescope<CR>a$/;"	m
<F4>	vim/.config/nvim/init.vim	/^    nnoremap <F4>   :Telescope<CR>$/;"	m
<F4>	vim/.config/nvim/init.vim	/^    vnoremap <F4>   :Telescope<CR>gv$/;"	m
<F5>	vim/.config/nvim/init.vim	/^inoremap <F5> <esc>:source $MYVIMRC<CR>a$/;"	m
<F5>	vim/.config/nvim/init.vim	/^nnoremap <F5> :source $MYVIMRC<CR>$/;"	m
<F5>	vim/.config/nvim/init.vim	/^vnoremap <F5> :source $MYVIMRC<CR>gv$/;"	m
<F6>	vim/.config/nvim/init.vim	/^inoremap <F6> <esc>:e $MYVIMRC<CR>a$/;"	m
<F6>	vim/.config/nvim/init.vim	/^nnoremap <F6> :e $MYVIMRC<CR>$/;"	m
<F6>	vim/.config/nvim/init.vim	/^vnoremap <F6> :e $MYVIMRC<CR>gv$/;"	m
<F7>	vim/.config/nvim/init.vim	/^    inoremap <F7> <esc>:FzfPreviewDirectoryFiles<CR>a$/;"	m
<F7>	vim/.config/nvim/init.vim	/^    nnoremap <F7> :FzfPreviewDirectoryFiles<CR>$/;"	m
<F7>	vim/.config/nvim/init.vim	/^    vnoremap <F7> :FzfPreviewDirectoryFiles<CR>gv$/;"	m
<Leader>a	vim/.config/nvim/init.vim	/^    nmap <Leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<Leader>a	vim/.config/nvim/init.vim	/^    xmap <Leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<Leader>ac	vim/.config/nvim/init.vim	/^    nmap <Leader>ac  <Plug>(coc-codeaction-cursor)$/;"	m
<Leader>as	vim/.config/nvim/init.vim	/^    nmap <Leader>as  <Plug>(coc-codeaction-source)$/;"	m
<Leader>p	vim/.config/nvim/init.vim	/^    nmap <Leader>p  <Plug>(coc-format-selected)$/;"	m
<Leader>p	vim/.config/nvim/init.vim	/^    xmap <Leader>p  <Plug>(coc-format-selected)$/;"	m
<Leader>qf	vim/.config/nvim/init.vim	/^    nmap <Leader>qf  <Plug>(coc-fix-current)$/;"	m
<Leader>r	vim/.config/nvim/init.vim	/^    nmap <silent> <Leader>r  <Plug>(coc-codeaction-refactor-selected)$/;"	m
<Leader>r	vim/.config/nvim/init.vim	/^    xmap <silent> <Leader>r  <Plug>(coc-codeaction-refactor-selected)$/;"	m
<Leader>re	vim/.config/nvim/init.vim	/^    nmap <silent> <Leader>re <Plug>(coc-codeaction-refactor)$/;"	m
<M-c>	vim/.config/nvim/init.vim	/^    inoremap <M-c> <C-\\><C-o>:CocCommand $/;"	m
<M-c>	vim/.config/nvim/init.vim	/^    nnoremap <M-c> :CocCommand $/;"	m
<M-c>	vim/.config/nvim/init.vim	/^    vnoremap <M-c> :CocCommand $/;"	m
<M-f>	vim/.config/nvim/init.vim	/^    inoremap <silent><M-f> <C-\\><C-o>:FzfPreviewBufferLines<cr>$/;"	m
<M-f>	vim/.config/nvim/init.vim	/^    nnoremap <silent><M-f> :FzfPreviewBufferLines<cr>$/;"	m
<M-f>	vim/.config/nvim/init.vim	/^    vnoremap <silent><M-f> y<Esc>:FzfPreviewBufferLines --add-fzf-arg=--query="<C-r>=expand('<cw/;"	m
<M-h>	vim/.config/nvim/init.vim	/^cnoremap <M-h> <C-e><C-u>nohl<CR>:<Esc>$/;"	m
<M-h>	vim/.config/nvim/init.vim	/^inoremap <M-h> <C-\\><C-o>:%s,,,gc<Left><Left><Left><Left>$/;"	m
<M-h>	vim/.config/nvim/init.vim	/^nnoremap <M-h> :%s,,,gc<Left><Left><Left><Left>$/;"	m
<M-h>	vim/.config/nvim/init.vim	/^vnoremap <M-h> y:%s,<C-r>",,gc<Left><Left><Left>$/;"	m
<M-m>	vim/.config/nvim/init.vim	/^    inoremap <silent><M-m> <C-\\><C-o>:MinimapToggle<CR>:MinimapUpdateHighlight<cr>$/;"	m
<M-m>	vim/.config/nvim/init.vim	/^    nnoremap <silent><M-m> <esc>:MinimapToggle<CR>:MinimapUpdateHighlight<cr>$/;"	m
<M-m>	vim/.config/nvim/init.vim	/^    vnoremap <silent><M-m> <esc>:MinimapToggle<CR>:MinimapUpdateHighlight<cr>$/;"	m
<S-F7>	vim/.config/nvim/init.vim	/^    inoremap <S-F7> <esc>:FzfPreviewGitFiles<CR>a$/;"	m
<S-F7>	vim/.config/nvim/init.vim	/^    nnoremap <S-F7> :FzfPreviewGitFiles<CR>$/;"	m
<S-F7>	vim/.config/nvim/init.vim	/^    vnoremap <S-F7> :FzfPreviewGitFiles<CR>gv $/;"	m
<S-TAB>	vim/.config/nvim/init.vim	/^    inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\\<C-h>"$/;"	m
<S-Tab>	vim/.config/nvim/init.vim	/^vnoremap <S-Tab> <gv $/;"	m
<TAB>	vim/.config/nvim/init.vim	/^    inoremap <silent><expr> <TAB>$/;"	m
<Tab>	vim/.config/nvim/init.vim	/^nnoremap <Tab>   i<tab><esc><right>$/;"	m
<Tab>	vim/.config/nvim/init.vim	/^vnoremap <Tab>   >gv$/;"	m
<Up>	vim/.config/nvim/init.vim	/^inoremap <expr> <Up> (getline(".")[col(".")-1] != "" ? '<C-o>g<Up>' : '<Up>')$/;"	m
<Up>	vim/.config/nvim/init.vim	/^nnoremap <expr> <Up> (getline(".")[col(".")-1] != ""  ? 'g<Up>' : '<Up>')$/;"	m
<Up>	vim/.config/nvim/init.vim	/^vnoremap <expr> <Up> (getline(".")[col(".")-1] != "" ? 'g<Up>' : '<Up>')$/;"	m
<c-@>	vim/.config/nvim/init.vim	/^      inoremap <silent><expr> <c-@> coc#refresh()$/;"	m
<c-`>	vim/.config/nvim/init.vim	/^inoremap <silent><c-`> <Esc><Cmd>exe v:count1 . "ToggleTerm"<CR>$/;"	m
<c-`>	vim/.config/nvim/init.vim	/^nnoremap <silent><c-`> <Cmd>exe v:count1 . "ToggleTerm"<CR>$/;"	m
<c-`>	vim/.config/nvim/init.vim	/^vnoremap <silent><c-`> <Esc><Cmd>exe v:count1 . "ToggleTerm"<CR>$/;"	m
<leader>f	vim/.config/nvim/init.vim	/^    nmap <leader>f [fzf-p]$/;"	m
<leader>f	vim/.config/nvim/init.vim	/^    xmap <leader>f [fzf-p]$/;"	m
<leader>m	vim/.config/nvim/init.vim	/^inoremap <leader>m <C-\\><C-o>:Glow<cr><esc> $/;"	m
<leader>m	vim/.config/nvim/init.vim	/^nnoremap <leader>m :Glow<cr><esc>$/;"	m
<leader>m	vim/.config/nvim/init.vim	/^vnoremap <leader>m :Glow<cr><esc>gv$/;"	m
<leader>rn	vim/.config/nvim/init.vim	/^    nmap <leader>rn <Plug>(coc-rename)$/;"	m
<space>	vim/.config/nvim/init.vim	/^nnoremap <space> i<space><esc><Right>$/;"	m
AUR-fzf-list-website	aliases/.bash_aliases.d/package_managers.sh	/^        function AUR-fzf-list-website(){$/;"	f
C	vim/.config/nvim/init.vim	/^nnoremap C "+Y$/;"	m
C	vim/.config/nvim/init.vim	/^vnoremap C "+Y$/;"	m
CC	vim/.config/nvim/init.vim	/^nnoremap CC "+0Yg_$/;"	m
CC	vim/.config/nvim/init.vim	/^vnoremap CC "+0Yg_$/;"	m
CheckBackspace	vim/.config/nvim/init.vim	/^    function! CheckBackspace() abort$/;"	f
CloseWindow	vim/.config/nvim/init.vim	/^function! CloseWindow()$/;"	f
D	vim/.config/nvim/init.vim	/^nnoremap D "_D$/;"	m
D	vim/.config/nvim/init.vim	/^vnoremap D "_C$/;"	m
ENV PS1	doas/doas.conf	/^permit setenv { -ENV PS1=$DOAS_PS1 SSH_AUTH_SOCK XAUTHORITY LANG LC_ALL } :wheel $/;"	k
Fold	vim/.config/nvim/init.vim	/^    command! -nargs=? Fold :call     CocAction('fold', <f-args>)$/;"	c
Format	vim/.config/nvim/init.vim	/^    command! -nargs=0 Format :call CocActionAsync('format')$/;"	c
GPU-drivers	aliases/.bash_aliases.d/general.sh	/^alias GPU-drivers="inxi -G"$/;"	a
GetPluginName	vim/.config/nvim/plug_lazy_adapter.vim	/^function! GetPluginName(pluginUrl)$/;"	f
Identity	polkit/49-nopasswd_global.conf	/^Identity=unix-group:wheel;unix-group:sudo$/;"	k
Install.sh	README.md	/^## Install.sh$/;"	s	chapter:My Dotfiles
Install_automount_usb.sh	README.md	/^## Install_automount_usb.sh$/;"	s	chapter:My Dotfiles
Install_flatpak.sh	README.md	/^## Install_flatpak.sh$/;"	s	chapter:My Dotfiles
Install_git.sh	README.md	/^## Install_git.sh$/;"	s	chapter:My Dotfiles
Install_gitignore.sh	README.md	/^## Install_gitignore.sh$/;"	s	chapter:My Dotfiles
Install_go.sh	README.md	/^## Install_go.sh$/;"	s	chapter:My Dotfiles
Install_pipewire_switch_on_connect.sh	README.md	/^## Install_pipewire_switch_on_connect.sh$/;"	s	chapter:My Dotfiles
Install_polkit_wheel.sh	README.md	/^## Install_polkit_wheel.sh$/;"	s	chapter:My Dotfiles
Install_samba.sh	README.md	/^## Install_samba.sh$/;"	s	chapter:My Dotfiles
IsPluginUsed	vim/.config/nvim/plug_lazy_adapter.vim	/^function! IsPluginUsed(name)$/;"	f
K	vim/.config/nvim/init.vim	/^    nnoremap <silent> K :call ShowDocumentation()<CR>$/;"	m
LastCheck	vim/.config/nvim/init.vim	/^function! LastCheck()$/;"	f
MakeLazyKeys	vim/.config/nvim/plug_lazy_adapter.vim	/^    function! MakeLazyKeys(args)$/;"	f
My Dotfiles	README.md	/^My Dotfiles$/;"	c
MyLastWindow	vim/.config/nvim/init.vim	/^function! MyLastWindow()$/;"	f
OR	vim/.config/nvim/init.vim	/^    command! -nargs=0 OR   :call     CocActionAsync('runCommand', 'editor.action.organizeImport'/;"	c
P	vim/.config/nvim/init.vim	/^nnoremap P o<esc>"+P$/;"	m
P	vim/.config/nvim/init.vim	/^vnoremap P o<esc>"+P$/;"	m
PS1_update	aliases/.bash_aliases.d/PS1_colours.sh	/^function PS1_update() {$/;"	f
PlugPlusLazyArgs	vim/.config/nvim/plug_lazy_adapter.vim	/^function! PlugPlusLazyArgs(plugin, args)$/;"	f
PlugToLazy	vim/.config/nvim/plug_lazy_adapter.vim	/^function PlugToLazy(plugin, opts)$/;"	f
Plugin	vim/.config/nvim/plug_lazy_adapter.vim	/^command! -bang -nargs=+ Plugin call <sid>PluginAdapter(<args>)$/;"	c
PluginNameToFunc	vim/.config/nvim/plug_lazy_adapter.vim	/^function! PluginNameToFunc(name)$/;"	f
ResultActive	polkit/49-nopasswd_global.conf	/^ResultActive=yes$/;"	k
ResultInactive	polkit/49-nopasswd_global.conf	/^ResultInactive=yes$/;"	k
S	vim/.config/nvim/init.vim	/^nnoremap S V$/;"	m
S	vim/.config/nvim/init.vim	/^vnoremap S V$/;"	m
ShowDocumentation	vim/.config/nvim/init.vim	/^    function! ShowDocumentation()$/;"	f
T	vim/.config/nvim/init.vim	/^nnoremap T :! $/;"	m
T	vim/.config/nvim/init.vim	/^vnoremap T :! $/;"	m
UnPlug	vim/.config/nvim/plug_lazy_adapter.vim	/^command! -nargs=1 -bar UnPlug call s:deregister(<args>)$/;"	c
V	vim/.config/nvim/init.vim	/^nnoremap V "+P$/;"	m
V	vim/.config/nvim/init.vim	/^vnoremap V "+P$/;"	m
VimOSCYankPost	vim/.config/nvim/init.vim	/^    augroup VimOSCYankPost$/;"	a
W	vim/.config/nvim/init.vim	/^vnoremap W aW$/;"	m
X	ranger/.config/ranger/rifle.conf	/^ext s[wmf]c, has snes9x-gtk,X = snes9x-gtk "$1"$/;"	k
Y	vim/.config/nvim/init.vim	/^nnoremap Y "+^Y$/;"	m
Y	vim/.config/nvim/init.vim	/^vnoremap Y "+Y$/;"	m
YY	vim/.config/nvim/init.vim	/^nnoremap YY "+^Yg_$/;"	m
[	vim/.config/nvim/init.vim	/^vnoremap [      di[]<Esc>hpgv $/;"	m
[fzf-p]*	vim/.config/nvim/init.vim	/^    nnoremap <silent> [fzf-p]*     :<C-u>FzfPreviewLines --add-fzf-arg=--no-sort --add-fzf-arg=-/;"	m
[fzf-p]/	vim/.config/nvim/init.vim	/^    nnoremap <silent> [fzf-p]\/     :<C-u>FzfPreviewLines --add-fzf-arg=--no-sort --add-fzf-arg=/;"	m
[fzf-p]<C-r>	vim/.config/nvim/init.vim	/^    nnoremap <silent> [fzf-p]<C-r> :<C-u>FzfPreviewJumps<CR>$/;"	m
[fzf-p]B	vim/.config/nvim/init.vim	/^    nnoremap <silent> [fzf-p]B     :<C-u>FzfPreviewAllBuffers<CR>$/;"	m
[fzf-p]b	vim/.config/nvim/init.vim	/^    nnoremap <silent> [fzf-p]b     :<C-u>FzfPreviewBuffers<CR>$/;"	m
[fzf-p]g;	vim/.config/nvim/init.vim	/^    nnoremap <silent> [fzf-p]g;    :<C-u>FzfPreviewChanges<CR>$/;"	m
[fzf-p]ga	vim/.config/nvim/init.vim	/^    nnoremap <silent> [fzf-p]ga    :<C-u>FzfPreviewGitActions<CR>$/;"	m
[fzf-p]gr	vim/.config/nvim/init.vim	/^    nnoremap          [fzf-p]gr    :<C-u>FzfPreviewProjectGrep<Space>$/;"	m
[fzf-p]gr	vim/.config/nvim/init.vim	/^    xnoremap          [fzf-p]gr    "sy:  FzfPreviewProjectGrep<Space>-F<Space>"<C-r>=substitute(/;"	m
[fzf-p]gs	vim/.config/nvim/init.vim	/^    nnoremap <silent> [fzf-p]gs    :<C-u>FzfPreviewGitStatus<CR>$/;"	m
[fzf-p]l	vim/.config/nvim/init.vim	/^    nnoremap <silent> [fzf-p]l     :<C-u>FzfPreviewLocationList<CR>$/;"	m
[fzf-p]o	vim/.config/nvim/init.vim	/^    nnoremap <silent> [fzf-p]o     :<C-u>FzfPreviewFromResources buffer project_mru<CR>$/;"	m
[fzf-p]p	vim/.config/nvim/init.vim	/^    nnoremap <silent> [fzf-p]p     :<C-u>FzfPreviewFromResources project_mru git<CR>$/;"	m
[fzf-p]q	vim/.config/nvim/init.vim	/^    nnoremap <silent> [fzf-p]q     :<C-u>FzfPreviewQuickFix<CR>$/;"	m
[fzf-p]t	vim/.config/nvim/init.vim	/^    nnoremap <silent> [fzf-p]t     :<C-u>FzfPreviewBufferTags<CR>$/;"	m
[g	vim/.config/nvim/init.vim	/^    nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
\x20              terminal	ranger/.config/ranger/rifle.conf	/^ext x?html?, has w3m,               terminal = w3m "$@"$/;"	k
\x20             terminal	ranger/.config/ranger/rifle.conf	/^ext x?html?, has lynx,              terminal = lynx -- "$@"$/;"	k
\x20            terminal	ranger/.config/ranger/rifle.conf	/^ext x?html?, has links,             terminal = links "$@"$/;"	k
\x20           terminal	ranger/.config/ranger/rifle.conf	/^ext x?html?, has elinks,            terminal = elinks "$@"$/;"	k
\x20           terminal	ranger/.config/ranger/rifle.conf	/^ext x?html?, has links2,            terminal = links2 "$@"$/;"	k
\x20       pager_move  up	ranger/.config/ranger/rc.conf	/^pmap  <up>        pager_move  up=1$/;"	k
\x20       taskview_move up	ranger/.config/ranger/rc.conf	/^tmap <up>        taskview_move up=1$/;"	k
\x20       terminal	ranger/.config/ranger/rifle.conf	/^ext docx?, has docfd,        terminal = docfd -- "$@"$/;"	k
\x20      move right	ranger/.config/ranger/rc.conf	/^map <CR>       move right=1$/;"	k
\x20      move up	ranger/.config/ranger/rc.conf	/^map <UP>       move up=1$/;"	k
\x20      pager_move  down	ranger/.config/ranger/rc.conf	/^pmap  <C-d>       pager_move  down=0.5  pages=True$/;"	k
\x20      pager_move  to	ranger/.config/ranger/rc.conf	/^pmap  <end>       pager_move  to=-1$/;"	k
\x20      pager_move  up	ranger/.config/ranger/rc.conf	/^pmap  <C-u>       pager_move  up=0.5    pages=True$/;"	k
\x20      taskview_move down	ranger/.config/ranger/rc.conf	/^tmap <C-d>       taskview_move down=0.5  pages=True$/;"	k
\x20      taskview_move to	ranger/.config/ranger/rc.conf	/^tmap <end>       taskview_move to=-1$/;"	k
\x20      taskview_move up	ranger/.config/ranger/rc.conf	/^tmap <C-u>       taskview_move up=0.5    pages=True$/;"	k
\x20      terminal	ranger/.config/ranger/rifle.conf	/^ext docx?, has catdoc,       terminal = catdoc -- "$@" | "$PAGER"$/;"	k
\x20     move to	ranger/.config/ranger/rc.conf	/^map <END>      move to=-1$/;"	k
\x20     pager_move  down	ranger/.config/ranger/rc.conf	/^pmap  <down>      pager_move  down=1$/;"	k
\x20     pager_move  left	ranger/.config/ranger/rc.conf	/^pmap  <left>      pager_move  left=4$/;"	k
\x20     pager_move  to	ranger/.config/ranger/rc.conf	/^pmap  <home>      pager_move  to=0$/;"	k
\x20     taskview_move down	ranger/.config/ranger/rc.conf	/^tmap <down>      taskview_move down=1$/;"	k
\x20     taskview_move to	ranger/.config/ranger/rc.conf	/^tmap <home>      taskview_move to=0$/;"	k
\x20    move down	ranger/.config/ranger/rc.conf	/^map <DOWN>     move down=1$/;"	k
\x20    move left	ranger/.config/ranger/rc.conf	/^map <LEFT>     move left=1$/;"	k
\x20    move to	ranger/.config/ranger/rc.conf	/^map <HOME>     move to=0$/;"	k
\x20    pager_move  right	ranger/.config/ranger/rc.conf	/^pmap  <right>     pager_move  right=4$/;"	k
\x20   has atool	ranger/.config/ranger/rifle.conf	/^ext ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,     has atool = atool --list --each -- "$@" | "/;"	k
\x20   move right	ranger/.config/ranger/rc.conf	/^map <RIGHT>    move right=1$/;"	k
\x20   pager_move  up	ranger/.config/ranger/rc.conf	/^pmap  <pageup>    pager_move  up=1.0    pages=True$/;"	k
\x20   taskview_move up	ranger/.config/ranger/rc.conf	/^tmap <pageup>    taskview_move up=1.0    pages=True$/;"	k
\x20  move up	ranger/.config/ranger/rc.conf	/^map <PAGEUP>   move up=1     pages=True$/;"	k
\x20 label editor	ranger/.config/ranger/rifle.conf	/^mime ^text,  label editor = "${VISUAL:-$EDITOR}" -- "$@"$/;"	k
\x20 label pager	ranger/.config/ranger/rifle.conf	/^mime ^text,  label pager  = "$PAGER" -- "$@"$/;"	k
\x20 pager_move  down	ranger/.config/ranger/rc.conf	/^pmap  <pagedown>  pager_move  down=1.0  pages=True$/;"	k
\x20 taskview_move down	ranger/.config/ranger/rc.conf	/^tmap <pagedown>  taskview_move down=1.0  pages=True$/;"	k
\x20X	ranger/.config/ranger/rifle.conf	/^ext nes, has fceux, X         = fceux "$1"$/;"	k
\x20X	ranger/.config/ranger/rifle.conf	/^ext s[wmf]c, has zsnes, X     = zsnes "$1"$/;"	k
\x20X	ranger/.config/ranger/rifle.conf	/^label wallpaper, number 11, mime ^image, has feh, X = feh --bg-scale "$1"$/;"	k
\x20X	ranger/.config/ranger/rifle.conf	/^label wallpaper, number 12, mime ^image, has feh, X = feh --bg-tile "$1"$/;"	k
\x20X	ranger/.config/ranger/rifle.conf	/^label wallpaper, number 13, mime ^image, has feh, X = feh --bg-center "$1"$/;"	k
\x20X	ranger/.config/ranger/rifle.conf	/^label wallpaper, number 14, mime ^image, has feh, X = feh --bg-fill "$1"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext                        sxc|xlsx?|xlt|xlw|gnm|gnumeric, has gnumeric,    X, flag f = gnumeric/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext                        sxc|xlsx?|xlt|xlw|gnm|gnumeric, has kspread,     X, flag f = kspread /;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext cbr,  has zathura,      X, flag f = zathura -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext cbz,  has zathura,      X, flag f = zathura -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext djvu, has atril,  X, flag f = atril -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext djvu, has djview, X, flag f = djview -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext djvu, has evince, X, flag f = evince -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext djvu, has zathura,X, flag f = zathura -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext epub, has docfd,        X, flag f = docfd -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext epub, has ebook-viewer, X, flag f = ebook-viewer -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext epub, has mupdf,        X, flag f = mupdf -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext epub, has zathura,      X, flag f = zathura -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext mobi, has ebook-viewer, X, flag f = ebook-viewer -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pdf, has apvlv,    X, flag f = apvlv -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pdf, has atril,    X, flag f = atril -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pdf, has docfd,    X, flag f = docfd "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pdf, has epdfview, X, flag f = epdfview -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pdf, has evince,   X, flag f = evince -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pdf, has llpp,     X, flag f = llpp "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pdf, has mupdf,    X, flag f = mupdf "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pdf, has mupdf-x11,X, flag f = mupdf-x11 "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pdf, has okular,   X, flag f = okular -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pdf, has open,     X, flag f = open "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pdf, has qpdfview, X, flag f = qpdfview "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pdf, has xpdf,     X, flag f = xpdf -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pdf, has zathura,  X, flag f = zathura -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has libreoffice, X, flag f = libreoff/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has ooffice,     X, flag f = ooffice /;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has soffice,     X, flag f = soffice /;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has chromium,         X, flag f = chromium -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has chromium-browser, X, flag f = chromium-browser -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has docfd,            X, flag f = docfd -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has dwb,              X, flag f = dwb -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has epiphany,         X, flag f = epiphany -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has firefox,          X, flag f = firefox -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has google-chrome,    X, flag f = google-chrome -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has iceweasel,        X, flag f = iceweasel -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has jumanji,          X, flag f = jumanji -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has konqueror,        X, flag f = konqueror -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has luakit,           X, flag f = luakit -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has midori,           X, flag f = midori -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has opera,            X, flag f = opera -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has qutebrowser,      X, flag f = qutebrowser -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has seamonkey,        X, flag f = seamonkey -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has surf,             X, flag f = surf -- file:\/\/"$1"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has uzbl,             X, flag f = uzbl -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has uzbl-browser,     X, flag f = uzbl-browser -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has uzbl-core,        X, flag f = uzbl-core -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has uzbl-tabbed,      X, flag f = uzbl-tabbed -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has vimprobable,      X, flag f = vimprobable -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext x?html?, has vimprobable2,     X, flag f = vimprobable2 -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^ext xcf,                    X, flag f = gimp -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^font, has fontforge, X, flag f = fontforge "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has eog,       X, flag f = eog -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has eom,       X, flag f = eom -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has feh,       X, flag f = feh -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has geeqie,    X, flag f = geeqie -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has gimp,      X, flag f = gimp -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has gpicview,  X, flag f = gpicview -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has gwenview,  X, flag f = gwenview -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has imv,       X, flag f = imv -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has mirage,    X, flag f = mirage -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has nomacs,    X, flag f = nomacs -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has pqiv,      X, flag f = pqiv -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has ristretto, X, flag f = ristretto "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has sxiv,      X, flag f = sxiv -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image, has viewnior,  X, flag f = viewnior -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image\/svg, has display,  X, flag f = display -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^image\/svg, has inkscape, X, flag f = inkscape -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^video,       has mplayer,  X, flag f = mplayer -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^video,       has mplayer,  X, flag f = mplayer -fs -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^video,       has mplayer2, X, flag f = mplayer2 -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^video,       has mplayer2, X, flag f = mplayer2 -fs -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^video,       has mpv,      X, flag f = mpv -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^video,       has mpv,      X, flag f = mpv --fs -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^video|audio, has gmplayer, X, flag f = gmplayer -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^video|audio, has smplayer, X, flag f = smplayer "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^video|audio, has totem,    X, flag f = totem -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^video|audio, has totem,    X, flag f = totem --fullscreen -- "$@"$/;"	k
\x20flag f	ranger/.config/ranger/rifle.conf	/^mime ^video|audio, has vlc,      X, flag f = vlc -- "$@"$/;"	k
\x20has 7z	ranger/.config/ranger/rifle.conf	/^ext 7z, has 7z = 7z -p l "$@" | "$PAGER"$/;"	k
\x20has alacritty	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has alacritty = alacritty -e "$@"$/;"	k
\x20has atool	ranger/.config/ranger/rifle.conf	/^ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  has atool = atool --extract --each -- "$@"$/;"	k
\x20has atool	ranger/.config/ranger/rifle.conf	/^ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --extract --each -- "$@"$/;"	k
\x20has atool	ranger/.config/ranger/rifle.conf	/^ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --list --each -- "$@" | "/;"	k
\x20has bzip2	ranger/.config/ranger/rifle.conf	/^ext bz2, has bzip2 = for file in "$@"; do bzip2 -dk "$file"; done$/;"	k
\x20has guake	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has guake = guake -ne "$@"$/;"	k
\x20has kitty	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has kitty = kitty -- "$@"$/;"	k
\x20has konsole	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has konsole = konsole -e "$@"$/;"	k
\x20has lilyterm	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has lilyterm = lilyterm -e "$@"$/;"	k
\x20has lxterminal	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has lxterminal = lxterminal -e "$@"$/;"	k
\x20has mplayer	ranger/.config/ranger/rifle.conf	/^mime ^audio|ogg$, terminal, has mplayer  = mplayer -- "$@"$/;"	k
\x20has mplayer	ranger/.config/ranger/rifle.conf	/^mime ^video, terminal, !X, has mplayer   = mplayer -- "$@"$/;"	k
\x20has mplayer2	ranger/.config/ranger/rifle.conf	/^mime ^audio|ogg$, terminal, has mplayer2 = mplayer2 -- "$@"$/;"	k
\x20has mplayer2	ranger/.config/ranger/rifle.conf	/^mime ^video, terminal, !X, has mplayer2  = mplayer2 -- "$@"$/;"	k
\x20has mpv	ranger/.config/ranger/rifle.conf	/^mime ^audio|ogg$, terminal, has mpv      = mpv -- "$@"$/;"	k
\x20has mpv	ranger/.config/ranger/rifle.conf	/^mime ^video, terminal, !X, has mpv       = mpv -- "$@"$/;"	k
\x20has open	ranger/.config/ranger/rifle.conf	/^label open, has open     = open -- "$@"$/;"	k
\x20has sakura	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has sakura = sakura -e "$@"$/;"	k
\x20has st	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has st = st -e "$@"$/;"	k
\x20has tar	ranger/.config/ranger/rifle.conf	/^ext tar|gz|bz2|xz, has tar = for file in "$@"; do tar vvxf "$file"; done$/;"	k
\x20has tar	ranger/.config/ranger/rifle.conf	/^ext tar|gz|bz2|xz, has tar = tar vvtf "$1" | "$PAGER"$/;"	k
\x20has terminator	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has terminator = terminator -x "$@"$/;"	k
\x20has terminology	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has terminology = terminology -e "$@"$/;"	k
\x20has termite	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has termite = termite -x '"$@"'$/;"	k
\x20has tilda	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has tilda = tilda -c "$@"$/;"	k
\x20has unace	ranger/.config/ranger/rifle.conf	/^ext ace, has unace = for file in "$@"; do unace e "$file"; done$/;"	k
\x20has unace	ranger/.config/ranger/rifle.conf	/^ext ace, has unace = unace l "$1" | less$/;"	k
\x20has unrar	ranger/.config/ranger/rifle.conf	/^ext rar, has unrar = for file in "$@"; do unrar x "$file"; done$/;"	k
\x20has unrar	ranger/.config/ranger/rifle.conf	/^ext rar, has unrar = unrar l "$1" | less$/;"	k
\x20has unzip	ranger/.config/ranger/rifle.conf	/^ext zip, has unzip = for file in "$@"; do unzip -d "${file%.*}" "$file"; done$/;"	k
\x20has unzip	ranger/.config/ranger/rifle.conf	/^ext zip, has unzip = unzip -l "$1" | less$/;"	k
\x20has urxvt	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has urxvt = urxvt -e "$@"$/;"	k
\x20has wildmidi	ranger/.config/ranger/rifle.conf	/^ext midi?,        terminal, has wildmidi = wildmidi -- "$@"$/;"	k
\x20has xterm	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has xterm = xterm -e "$@"$/;"	k
\x20mark_files toggle	ranger/.config/ranger/rc.conf	/^map <Space> mark_files toggle=True$/;"	k
\x20move down	ranger/.config/ranger/rc.conf	/^map <PAGEDOWN> move down=1   pages=True$/;"	k
\x20tag_toggle tag	ranger/.config/ranger/rc.conf	/^map "<any>  tag_toggle tag=%any$/;"	k
\x21	vim/.config/nvim/init.vim	/^vnoremap <expr> !   (visualmode() == "\\<C-V>" ? ':norm i#<cr>gv' : 'c!!<Esc>hpgv')$/;"	m
]g	vim/.config/nvim/init.vim	/^    nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
_	keybinds/.keybinds.d/keybinds.bash	/^    alias _.="tput cuu1 && tput cuu1 && tput cuu1 && tput sc; clear && tput rc && for ((i = 0 ; /;"	a
_	keybinds/.keybinds.d/keybinds.bash	/^    alias _.="tput cuu1 && tput cuu1 && tput sc; clear && tput rc && for ((i = 0 ; i <= \\$(dirs/;"	a
_	keybinds/.keybinds.d/keybinds.bash	/^    alias _.="tput cuu1 && tput sc; clear && tput rc && for ((i = 0 ; i <= \\$(dirs -v | column /;"	a
_	keybinds/.keybinds.d/keybinds.bash	/^    alias _="tput cuu1 && tput cuu1 && tput cuu1 && tput sc; clear && tput rc && history -d -1 &/;"	a
_	keybinds/.keybinds.d/keybinds.bash	/^    alias _="tput cuu1 && tput cuu1 && tput sc; clear && tput rc && history -d -1 &>\/dev\/null"$/;"	a
_	keybinds/.keybinds.d/keybinds.bash	/^    alias _="tput cuu1 && tput sc; clear && tput rc && history -d -1 &>\/dev\/null"$/;"	a
_G.check_back_space	vim/.config/nvim/init.lua.vim	/^function _G.check_back_space()$/;"	f
__	keybinds/.keybinds.d/keybinds.bash	/^alias __='clear && tput cup $(($LINE_TPUT+1)) $TPUT_COL && tput sc && tput cuu1 && echo "${PS1@P/;"	a
__docker_compose_fileref_generator	fzf/.bash_aliases.d/docker-fzf.sh	/^__docker_compose_fileref_generator() {$/;"	f
__docker_compose_parse_services_config	fzf/.bash_aliases.d/docker-fzf.sh	/^__docker_compose_parse_services_config() {$/;"	f
__docker_compose_pre_test	fzf/.bash_aliases.d/docker-fzf.sh	/^__docker_compose_pre_test() {$/;"	f
__docker_images_pre_test	fzf/.bash_aliases.d/docker-fzf.sh	/^__docker_images_pre_test() {$/;"	f
__docker_logs	fzf/.bash_aliases.d/docker-fzf.sh	/^__docker_logs() ($/;"	f
__docker_pre_test	fzf/.bash_aliases.d/docker-fzf.sh	/^__docker_pre_test() {$/;"	f
_builtins	aliases/.bash_aliases.d/bash.sh	/^_builtins(){$/;"	f
_builtins	bash_builtins.sh	/^_builtins(){$/;"	f
_commands	aliases/.bash_aliases.d/bash.sh	/^_commands(){$/;"	f
_commands	bash_builtins.sh	/^_commands(){$/;"	f
_edit_wo_executing	keybinds/.keybinds.d/keybinds.bash	/^_edit_wo_executing() {$/;"	f
_exit	fzf/.bash_aliases.d/docker-fzf.sh	/^  function _exit {$/;"	f
_files	aliases/.bash_aliases.d/bash.sh	/^_files(){$/;"	f
_files	bash_builtins.sh	/^_files(){$/;"	f
_groups	aliases/.bash_aliases.d/bash.sh	/^_groups(){$/;"	f
_groups	bash_builtins.sh	/^_groups(){$/;"	f
_ppa_purge	aliases/.bash_aliases.d/package_managers.sh	/^        _ppa_purge(){$/;"	f
_quote_all	keybinds/.keybinds.d/keybinds.bash	/^_quote_all() { READLINE_LINE="${READLINE_LINE@Q}"; }$/;"	f
_service-enable-now	aliases/.bash_aliases.d/systemctl.sh	/^_service-enable-now(){$/;"	f
_service-restart	aliases/.bash_aliases.d/systemctl.sh	/^_service-restart(){$/;"	f
_service-start	aliases/.bash_aliases.d/systemctl.sh	/^_service-start(){$/;"	f
_system-service-enable-now	aliases/.bash_aliases.d/systemctl.sh	/^_system-service-enable-now(){$/;"	f
_system-service-restart	aliases/.bash_aliases.d/systemctl.sh	/^_system-service-restart(){$/;"	f
_system-service-start	aliases/.bash_aliases.d/systemctl.sh	/^_system-service-start(){$/;"	f
_trash	aliases/.bash_aliases.d/general.sh	/^_trash(){$/;"	f
_users	aliases/.bash_aliases.d/bash.sh	/^_users(){$/;"	f
_users	bash_builtins.sh	/^_users(){$/;"	f
`	vim/.config/nvim/init.vim	/^vnoremap `      di``<Esc>hpgv$/;"	m
ac	vim/.config/nvim/init.vim	/^    omap ac <Plug>(coc-classobj-a)$/;"	m
ac	vim/.config/nvim/init.vim	/^    xmap ac <Plug>(coc-classobj-a)$/;"	m
add-apt-fzf-install-ppa	aliases/.bash_aliases.d/package_managers.sh	/^     alias add-apt-fzf-install-ppa="apt-add-ppa-fzf-install"  $/;"	a
add-to-group	aliases/.bash_aliases.d/general.sh	/^function add-to-group() {$/;"	f
af	vim/.config/nvim/init.vim	/^    omap af <Plug>(coc-funcobj-a)$/;"	m
af	vim/.config/nvim/init.vim	/^    xmap af <Plug>(coc-funcobj-a)$/;"	m
aliases	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
all-null	aliases/.bash_aliases.d/general.sh	/^alias all-null="&> \/dev\/null"$/;"	a
apt-add-ppa-fzf-install	aliases/.bash_aliases.d/package_managers.sh	/^        function apt-add-ppa-fzf-install(){$/;"	f
apt-full-upgrade	aliases/.bash_aliases.d/package_managers.sh	/^    alias apt-full-upgrade="sudo apt update && sudo apt full-upgrade && sudo apt autoremove"$/;"	a
apt-fzf-install	aliases/.bash_aliases.d/package_managers.sh	/^        function apt-fzf-install(){ $/;"	f
apt-fzf-remove	aliases/.bash_aliases.d/package_managers.sh	/^        function apt-fzf-remove(){$/;"	f
apt-install	aliases/.bash_aliases.d/package_managers.sh	/^    alias apt-install="sudo apt install" $/;"	a
apt-list-installed	aliases/.bash_aliases.d/package_managers.sh	/^    alias apt-list-installed="sudo apt list --installed" $/;"	a
apt-list-ppa-installed	aliases/.bash_aliases.d/package_managers.sh	/^        function apt-list-ppa-installed()	{$/;"	f
apt-search	aliases/.bash_aliases.d/package_managers.sh	/^    alias apt-search="sudo apt search" $/;"	a
apt-update	aliases/.bash_aliases.d/package_managers.sh	/^    alias apt-update="sudo apt update" $/;"	a
apt-upgrade	aliases/.bash_aliases.d/package_managers.sh	/^    alias apt-upgrade="sudo apt upgrade" $/;"	a
ascii_bold	neofetch/.config/neofetch/config.conf	/^ascii_bold="on"$/;"	k
ascii_colors	neofetch/.config/neofetch/config.conf	/^ascii_colors=(distro)$/;"	k
ascii_distro	neofetch/.config/neofetch/config.conf	/^ascii_distro="auto"$/;"	k
background_color	neofetch/.config/neofetch/config.conf	/^background_color=$/;"	k
backward	ranger/.config/ranger/rc.conf	/^cmap <A-d>        eval fm.ui.console.delete_word(backward=False)$/;"	k
bar_border	neofetch/.config/neofetch/config.conf	/^bar_border="on"$/;"	k
bar_char_elapsed	neofetch/.config/neofetch/config.conf	/^bar_char_elapsed="-"$/;"	k
bar_char_total	neofetch/.config/neofetch/config.conf	/^bar_char_total="="$/;"	k
bar_color_elapsed	neofetch/.config/neofetch/config.conf	/^bar_color_elapsed="distro"$/;"	k
bar_color_total	neofetch/.config/neofetch/config.conf	/^bar_color_total="distro"$/;"	k
bar_length	neofetch/.config/neofetch/config.conf	/^bar_length=15$/;"	k
bash	ctags/.ctags	/^--langdef=bash$/;"	l
battery_display	neofetch/.config/neofetch/config.conf	/^battery_display="off"$/;"	k
bios	aliases/.bash_aliases.d/systemctl.sh	/^alias bios="systemctl reboot --firmware-setup"$/;"	a
bios-version	aliases/.bash_aliases.d/general.sh	/^alias bios-version="sudo dmidecode -t 0"$/;"	a
block_height	neofetch/.config/neofetch/config.conf	/^block_height=1$/;"	k
block_range	neofetch/.config/neofetch/config.conf	/^block_range=(0 15)$/;"	k
block_width	neofetch/.config/neofetch/config.conf	/^block_width=2$/;"	k
bluetooth-down	aliases/.bash_aliases.d/systemctl.sh	/^alias bluetooth-down="sudo systemctl stop bluetooth.service"$/;"	a
bluetooth-start	aliases/.bash_aliases.d/systemctl.sh	/^alias bluetooth-start="sudo systemctl start bluetooth.service && blueman-manager"$/;"	a
bold	neofetch/.config/neofetch/config.conf	/^bold="off"$/;"	k
c	aliases/.bash_aliases.d/general.sh	/^alias c="cd"$/;"	a
c	vim/.config/nvim/init.vim	/^nnoremap c "+y$/;"	m
c	vim/.config/nvim/init.vim	/^vnoremap c "+y$/;"	m
cc	vim/.config/nvim/init.vim	/^nnoremap cc "0yg_$/;"	m
cc	vim/.config/nvim/init.vim	/^vnoremap cc "+0yg_$/;"	m
cd	keybinds/.keybinds.d/keybinds.bash	/^function cd() {$/;"	f
cd-home-	aliases/.bash_aliases.d/general.sh	/^    alias cd-home-="cd \/cygdrive\/c\/Users\/$USER"$/;"	a
check-ppa	aliases/.bash_aliases.d/package_managers.sh	/^        function check-ppa(){$/;"	f
check-ppa	checks/check_system.sh	/^function check-ppa(){$/;"	f
check_conf_doas	doas/doas.sh	/^alias check_conf_doas="doas doas -C \/etc\/doas.conf && echo 'config ok' || echo 'config error'"$/;"	a
check_songs	aliases/.bash_aliases.d/youtube.sh	/^alias check_songs='serber "cd \/mnt\/MyStuff\/Files\/Audio\/ && ls | xargs -0"'$/;"	a
check_youtubes	aliases/.bash_aliases.d/youtube.sh	/^alias check_youtubes='serber "cd \/mnt\/MyStuff\/Files\/Videos\/YouTubes\/ && ls | xargs -0 "'$/;"	a
code	aliases/.bash_aliases.d/flatpacks.sh	/^    alias code='GDK_BACKEND=x11 flatpak run com.visualstudio.code' $/;"	a
code	flatpak/.bash_aliases.d/flatpacks.sh	/^    alias code='GDK_BACKEND=x11 flatpak run com.visualstudio.code' $/;"	a
col_offset	neofetch/.config/neofetch/config.conf	/^col_offset="auto"$/;"	k
color_blocks	neofetch/.config/neofetch/config.conf	/^color_blocks="on"$/;"	k
colors	neofetch/.config/neofetch/config.conf	/^colors=(distro)$/;"	k
column	aliases/.bash_aliases.d/general.sh	/^alias column="column -c $(tput cols)"$/;"	a
columns	aliases/.bash_aliases.d/git.sh	/^alias columns="git column --mode=column"$/;"	a
compare-tput-escape_color	aliases/.bash_aliases.d/00-rlwrap_scripts.sh	/^function compare-tput-escape_color(){$/;"	f
completions	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
copy	aliases/.bash_aliases.d/general.sh	/^alias copy="cp"$/;"	a
copy_sshfs	aliases/.bash_aliases.d/ssh.sh	/^copy_sshfs(){ cp -r --no-preserve=mode "$1" "$2"; }$/;"	f
copy_to_serber	aliases/.bash_aliases.d/ssh.sh	/^copy_to_serber() { scp -r $user@$ip:$1 $2; }$/;"	f
cp	aliases/.bash_aliases.d/general.sh	/^alias cp="xcp --recursive --verbose  --no-clobber --glob --verbose --"$/;"	a
cp-all-to	aliases/.bash_aliases.d/general.sh	/^function cp-all-to(){$/;"	f
cp-old	aliases/.bash_aliases.d/general.sh	/^alias cp-old="cp -ruv"$/;"	a
cp-trash	aliases/.bash_aliases.d/general.sh	/^function cp-trash(){$/;"	f
cpf-bckup	aliases/.bash_aliases.d/general.sh	/^alias cpf-bckup="cp -f -b"$/;"	a
cpu_brand	neofetch/.config/neofetch/config.conf	/^cpu_brand="on"$/;"	k
cpu_cores	neofetch/.config/neofetch/config.conf	/^cpu_cores="logical"$/;"	k
cpu_display	neofetch/.config/neofetch/config.conf	/^cpu_display="off"$/;"	k
cpu_speed	neofetch/.config/neofetch/config.conf	/^cpu_speed="on"$/;"	k
cpu_temp	neofetch/.config/neofetch/config.conf	/^cpu_temp="C"$/;"	k
cron-add-example-edit-	aliases/.bash_aliases.d/general.sh	/^alias cron-add-example-edit-="crontab-edit-new"$/;"	a
cron-edit	aliases/.bash_aliases.d/general.sh	/^alias cron-edit="env VISUAL=$CRONEDITOR crontab -e"$/;"	a
cron-list-all-user-jobs	aliases/.bash_aliases.d/general.sh	/^function cron-list-all-user-jobs(){$/;"	f
cron-new	aliases/.bash_aliases.d/general.sh	/^alias cron-new='crontab-new'$/;"	a
crontab-add-example-edit	aliases/.bash_aliases.d/general.sh	/^alias crontab-add-example-edit="(crontab -l; echo '#* * * * * $USER command') | awk '!x[$0]++' |/;"	a
crontab-edit	aliases/.bash_aliases.d/general.sh	/^alias crontab-edit="env VISUAL=$CRONEDITOR crontab -e"$/;"	a
crontab-list-all-user-jobs	aliases/.bash_aliases.d/general.sh	/^alias crontab-list-all-user-jobs="cron-list-all-user-jobs"$/;"	a
crontab-new	aliases/.bash_aliases.d/general.sh	/^function crontab-new(){$/;"	f
crop_mode	neofetch/.config/neofetch/config.conf	/^crop_mode="normal"$/;"	k
crop_offset	neofetch/.config/neofetch/config.conf	/^crop_offset="center"$/;"	k
ctags	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
ctags-force-sh	aliases/.bash_aliases.d/ctags.sh	/^alias ctags-force-sh="ctags --language-force=sh -R *"$/;"	a
ctags-list-sh	aliases/.bash_aliases.d/ctags.sh	/^alias ctags-list-sh="ctags --list-kinds=sh"$/;"	a
curl	aliases/.bash_aliases.d/check_system.sh	/^    alias curl='curl.exe' $/;"	a
curl	checks/check_system.sh	/^    alias curl='curl.exe' $/;"	a
curl	install_cygwin.sh	/^    alias curl='curl.exe' $/;"	a
d	aliases/.bash_aliases.d/general.sh	/^alias d="dirs"$/;"	a
d	vim/.config/nvim/init.vim	/^nnoremap d "_d$/;"	m
d	vim/.config/nvim/init.vim	/^vnoremap d "_c$/;"	m
data_dir	vim/.config/nvim/init.vim	/^let data_dir = has('nvim') ? stdpath('data') . '\/site' : '~\/.vim'$/;"	v
date-eu	aliases/.bash_aliases.d/general.sh	/^alias date-eu='date "+%d-%m-%Y %A %T %Z"'$/;"	a
date-us	aliases/.bash_aliases.d/general.sh	/^alias date-us='date "+%Y-%m-%d %A %T %Z"'$/;"	a
dcb	fzf/.bash_aliases.d/docker-fzf.sh	/^dcb() {$/;"	f
dcba	fzf/.bash_aliases.d/docker-fzf.sh	/^dcba() {$/;"	f
dclean	fzf/.bash_aliases.d/docker-fzf.sh	/^dclean() {$/;"	f
dcp	fzf/.bash_aliases.d/docker-fzf.sh	/^dcp() {$/;"	f
dcpa	fzf/.bash_aliases.d/docker-fzf.sh	/^dcpa() {$/;"	f
dcu	fzf/.bash_aliases.d/docker-fzf.sh	/^dcu() {$/;"	f
dcua	fzf/.bash_aliases.d/docker-fzf.sh	/^dcua() {$/;"	f
dcupd	fzf/.bash_aliases.d/docker-fzf.sh	/^dcupd() {$/;"	f
dcupda	fzf/.bash_aliases.d/docker-fzf.sh	/^dcupda() {$/;"	f
de	fzf/.bash_aliases.d/docker-fzf.sh	/^de() {$/;"	f
de_version	neofetch/.config/neofetch/config.conf	/^de_version="on"$/;"	k
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:aliases
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:completions
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:ctags
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:envvars
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:fzf-alias
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:gpg
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:gpg-alias
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:keybinds
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:keybinds-bash
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:kitty
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:lazygit
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:lazygit-alias
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:ranger
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:ranger-aliases
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:readline
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:tmux
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:tmux-alias
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:vim
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:vim-alias
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:vim-completion
dest	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	s	object:xterm
devolo_down	aliases/.bash_aliases.d/variety.sh	/^alias devolo_down="sudo systemctl stop devolonetsvc.service"$/;"	a
devolo_start	aliases/.bash_aliases.d/variety.sh	/^alias devolo_start="sudo systemctl start devolonetsvc.service && bash \/opt\/devolo\/dlancockpit/;"	a
dirarg	ranger/.config/ranger/rc.conf	/^map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)$/;"	k
dirarg	ranger/.config/ranger/rc.conf	/^map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)$/;"	k
dirarg	ranger/.config/ranger/rc.conf	/^map dj  eval fm.cut(dirarg=dict(down=1), narg=quantifier)$/;"	k
dirarg	ranger/.config/ranger/rc.conf	/^map dk  eval fm.cut(dirarg=dict(up=1), narg=quantifier)$/;"	k
dirarg	ranger/.config/ranger/rc.conf	/^map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)$/;"	k
dirarg	ranger/.config/ranger/rc.conf	/^map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)$/;"	k
dirarg	ranger/.config/ranger/rc.conf	/^map yj  eval fm.copy(dirarg=dict(down=1), narg=quantifier)$/;"	k
dirarg	ranger/.config/ranger/rc.conf	/^map yk  eval fm.copy(dirarg=dict(up=1), narg=quantifier)$/;"	k
dirs	keybinds/.keybinds.d/keybinds.bash	/^alias dirs="dirs -l"$/;"	a
dirs-col	keybinds/.keybinds.d/keybinds.bash	/^alias dirs-col="dirs -v | column -c $COLUMNS"$/;"	a
dirs-col-pretty	keybinds/.keybinds.d/keybinds.bash	/^alias dirs-col-pretty="dirs -v | column -c $COLUMNS | sed -e 's\/ 0 \\\\([^\\t]*\\\\)\/'\\${GREE/;"	a
disable-docker	aliases/.bash_aliases.d/systemctl.sh	/^    alias disable-docker="sudo systemctl disable  $servs"$/;"	a
disable-now-docker	aliases/.bash_aliases.d/systemctl.sh	/^    alias disable-now-docker="sudo systemctl disable --now  $servs"$/;"	a
disable-now-pipewire	aliases/.bash_aliases.d/systemctl.sh	/^    alias disable-now-pipewire="systemctl disable --user --now  $servs"$/;"	a
disable-now-samba	aliases/.bash_aliases.d/systemctl.sh	/^    alias disable-now-samba="sudo systemctl disable --now $servs"$/;"	a
disable-now-sshd	aliases/.bash_aliases.d/systemctl.sh	/^    alias disable-now-sshd="sudo systemctl disable --now $servs"$/;"	a
disable-now-tor	aliases/.bash_aliases.d/systemctl.sh	/^    alias disable-now-tor="sudo systemctl disable --now  $servs"$/;"	a
disable-pipewire	aliases/.bash_aliases.d/systemctl.sh	/^    alias disable-pipewire="systemctl disable --user  $servs"$/;"	a
disable-samba	aliases/.bash_aliases.d/systemctl.sh	/^    alias disable-samba="sudo systemctl disable $servs"$/;"	a
disable-sshd	aliases/.bash_aliases.d/systemctl.sh	/^    alias disable-sshd="sudo systemctl disable $servs"$/;"	a
disable-tor	aliases/.bash_aliases.d/systemctl.sh	/^    alias disable-tor="sudo systemctl disable  $servs"$/;"	a
discord	aliases/.bash_aliases.d/flatpacks.sh	/^    alias discord='GDK_BACKEND=x11 flatpak run com.discordapp.Discord' $/;"	a
discord	aliases/.bash_aliases.d/variety.sh	/^    alias discord="discover-overlay && discord"$/;"	a
discord	flatpak/.bash_aliases.d/flatpacks.sh	/^    alias discord='GDK_BACKEND=x11 flatpak run com.discordapp.Discord' $/;"	a
discord-overlay	aliases/.bash_aliases.d/flatpacks.sh	/^    alias discord-overlay='discover-overlay' $/;"	a
discord-overlay	flatpak/.bash_aliases.d/flatpacks.sh	/^    alias discord-overlay='discover-overlay' $/;"	a
discord-screenaudio	aliases/.bash_aliases.d/flatpacks.sh	/^	alias discord-screenaudio='flatpak run --file-forwarding de.shorsh.discord-screenaudio'$/;"	a
discord-screenaudio	flatpak/.bash_aliases.d/flatpacks.sh	/^	alias discord-screenaudio='flatpak run --file-forwarding de.shorsh.discord-screenaudio'$/;"	a
discover-overlay	aliases/.bash_aliases.d/flatpacks.sh	/^    alias discover-overlay='GDK_BACKEND=x11 flatpak run io.github.trigg.discover_overlay' $/;"	a
discover-overlay	flatpak/.bash_aliases.d/flatpacks.sh	/^    alias discover-overlay='GDK_BACKEND=x11 flatpak run io.github.trigg.discover_overlay' $/;"	a
disk_display	neofetch/.config/neofetch/config.conf	/^disk_display="off"$/;"	k
disk_percent	neofetch/.config/neofetch/config.conf	/^disk_percent="on"$/;"	k
disk_show	neofetch/.config/neofetch/config.conf	/^disk_show=('\/' '\/usr\/local' '\/home')$/;"	k
disk_subtitle	neofetch/.config/neofetch/config.conf	/^disk_subtitle="mount"$/;"	k
distro_shorthand	neofetch/.config/neofetch/config.conf	/^distro_shorthand="on"$/;"	k
dk	fzf/.bash_aliases.d/docker-fzf.sh	/^dk() {$/;"	f
dka	fzf/.bash_aliases.d/docker-fzf.sh	/^dka() {$/;"	f
dkrm	fzf/.bash_aliases.d/docker-fzf.sh	/^dkrm() {$/;"	f
dkrma	fzf/.bash_aliases.d/docker-fzf.sh	/^dkrma() {$/;"	f
dl	fzf/.bash_aliases.d/docker-fzf.sh	/^dl() {$/;"	f
dla	fzf/.bash_aliases.d/docker-fzf.sh	/^dla() {$/;"	f
doas	doas/doas.sh	/^alias doas="doas "$/;"	a
doasedit	doas/doas.sh	/^function doasedit() { doas $EDITOR $1; }$/;"	f
docker-fzf-new-container	fzf/.bash_aliases.d/docker.sh	/^docker-fzf-new-container() {$/;"	f
docker-fzf-open-container	fzf/.bash_aliases.d/docker.sh	/^docker-fzf-open-container() {$/;"	f
docker-fzf-show-ip-container	fzf/.bash_aliases.d/docker.sh	/^docker-fzf-show-ip-container() {$/;"	f
docker-fzf-stop-container	fzf/.bash_aliases.d/docker.sh	/^docker-fzf-stop-container() {$/;"	f
docker_update	aliases/.bash_aliases.d/variety.sh	/^alias docker_update="docker-compose down && docker-compose pull && docker-compose up &"$/;"	a
dosu	install_aliases.sh	/^dosu(){ $/;"	f
dosu_r	install_aliases.sh	/^dosu_r(){ $/;"	f
dr	fzf/.bash_aliases.d/docker-fzf.sh	/^dr() {$/;"	f
drm	fzf/.bash_aliases.d/docker-fzf.sh	/^drm() {$/;"	f
drma	fzf/.bash_aliases.d/docker-fzf.sh	/^drma() {$/;"	f
drmi	fzf/.bash_aliases.d/docker-fzf.sh	/^drmi() {$/;"	f
drmia	fzf/.bash_aliases.d/docker-fzf.sh	/^drmia() {$/;"	f
ds	fzf/.bash_aliases.d/docker-fzf.sh	/^ds() {$/;"	f
ds4	aliases/.bash_aliases.d/variety.sh	/^alias ds4="python3 -m ds4drv --hidraw --udp --udp-port 26760"$/;"	a
ds4LOff	aliases/.bash_aliases.d/variety.sh	/^alias ds4LOff="ds4drv --led 000000"$/;"	a
ds4LOn	aliases/.bash_aliases.d/variety.sh	/^alias ds4LOn="ds4drv --led ff0000"$/;"	a
dsa	fzf/.bash_aliases.d/docker-fzf.sh	/^dsa() {$/;"	f
dsrm	fzf/.bash_aliases.d/docker-fzf.sh	/^dsrm() {$/;"	f
dsrma	fzf/.bash_aliases.d/docker-fzf.sh	/^dsrma() {$/;"	f
edit-whereis	aliases/.bash_aliases.d/general.sh	/^     function edit-whereis(){$/;"	f
edit_doas_conf	doas/doas.sh	/^alias edit_doas_conf="doasedit \/etc\/doas.conf && check_conf_doas"$/;"	a
egrep	aliases/.bash_aliases.d/general.sh	/^alias egrep='egrep --colour=always'$/;"	a
enable-docker	aliases/.bash_aliases.d/systemctl.sh	/^    alias enable-docker="sudo systemctl enable  $servs"$/;"	a
enable-now-docker	aliases/.bash_aliases.d/systemctl.sh	/^    alias enable-now-docker="sudo systemctl enable --now $servs"$/;"	a
enable-now-pipewire	aliases/.bash_aliases.d/systemctl.sh	/^    alias enable-now-pipewire="systemctl enable --user --now $servs"$/;"	a
enable-now-samba	aliases/.bash_aliases.d/systemctl.sh	/^    alias enable-now-samba="sudo systemctl enable --now $servs"$/;"	a
enable-now-sshd	aliases/.bash_aliases.d/systemctl.sh	/^    alias enable-now-sshd="sudo systemctl enable --now $servs"$/;"	a
enable-now-tor	aliases/.bash_aliases.d/systemctl.sh	/^    alias enable-now-tor="sudo systemctl enable --now $servs"$/;"	a
enable-pipewire	aliases/.bash_aliases.d/systemctl.sh	/^    alias enable-pipewire="systemctl enable --user  $servs"$/;"	a
enable-samba	aliases/.bash_aliases.d/systemctl.sh	/^    alias enable-samba="sudo systemctl enable $servs"$/;"	a
enable-sshd	aliases/.bash_aliases.d/systemctl.sh	/^    alias enable-sshd="sudo systemctl enable $servs"$/;"	a
enable-tor	aliases/.bash_aliases.d/systemctl.sh	/^    alias enable-tor="sudo systemctl enable  $servs"$/;"	a
environment-variables	install_envvars.sh	/^environment-variables(){$/;"	f
environment-variables_r	install_envvars.sh	/^environment-variables_r(){ $/;"	f
envvars	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
error-null	aliases/.bash_aliases.d/general.sh	/^alias error-null="2> \/dev\/null"$/;"	a
escape_spaces	aliases/.bash_aliases.d/general.sh	/^function escape_spaces(){$/;"	f
executable	aliases/.bash_aliases.d/general.sh	/^alias executable="sudo chmod +x"$/;"	a
executable	ranger/.config/ranger/rifle.conf	/^mime application\/x-executable = "$1"$/;"	k
executable-user	aliases/.bash_aliases.d/general.sh	/^alias executable-user="sudo chmod u+x"$/;"	a
exiftool-add-cron-wipe-all-metadata-rec-dir	aliases/.bash_aliases.d/variety.sh	/^    function exiftool-add-cron-wipe-all-metadata-rec-dir(){$/;"	f
exiftool-add-cron-wipe-all-metadata-rec-picture-dir	aliases/.bash_aliases.d/variety.sh	/^    alias exiftool-add-cron-wipe-all-metadata-rec-picture-dir="(crontab -l; echo '0,5,10,15,25,3/;"	a
exiftool-folder	aliases/.bash_aliases.d/variety.sh	/^    alias exiftool-folder="exiftool -r -all= $(pwd)"$/;"	a
ext 1	ranger/.config/ranger/rifle.conf	/^ext 1                         = man "$1"$/;"	k
ext exe	ranger/.config/ranger/rifle.conf	/^ext exe                       = wine "$1"$/;"	k
ext js	ranger/.config/ranger/rifle.conf	/^ext js  = node -- "$1"$/;"	k
ext php	ranger/.config/ranger/rifle.conf	/^ext php = php -- "$1"$/;"	k
ext pl	ranger/.config/ranger/rifle.conf	/^ext pl  = perl -- "$1"$/;"	k
ext py	ranger/.config/ranger/rifle.conf	/^ext py  = python -- "$1"$/;"	k
ext rb	ranger/.config/ranger/rifle.conf	/^ext rb  = ruby -- "$1"$/;"	k
ext sh	ranger/.config/ranger/rifle.conf	/^ext sh  = sh -- "$1"$/;"	k
extract-archive	aliases/.bash_aliases.d/general.sh	/^extract-archive(){  $/;"	f
eza	aliases/.bash_aliases.d/general.sh	/^    alias eza="eza --color=always --header --icons always" $/;"	a
eza-git	aliases/.bash_aliases.d/general.sh	/^    alias eza-git="eza --long --git-repos --header --git" $/;"	a
fd	aliases/.bash_aliases.d/find.sh	/^type fd &> \/dev\/null && alias fd='fd --color=always'$/;"	a
ferdium	aliases/.bash_aliases.d/flatpacks.sh	/^    alias ferdium='GDK_BACKEND=x11 \/usr\/bin\/flatpak run --branch=stable --arch=x86_64 --comma/;"	a
ferdium	flatpak/.bash_aliases.d/flatpacks.sh	/^    alias ferdium='GDK_BACKEND=x11 \/usr\/bin\/flatpak run --branch=stable --arch=x86_64 --comma/;"	a
ffmpeg-convert-mkv-embed-subtitles	aliases/.bash_aliases.d/ffmpeg.sh	/^    function ffmpeg-convert-mkv-embed-subtitles(){$/;"	f
ffmpeg-convert-to-mp3	aliases/.bash_aliases.d/ffmpeg.sh	/^    function ffmpeg-convert-to-mp3(){$/;"	f
ffmpeg-convert-to-mp4	aliases/.bash_aliases.d/ffmpeg.sh	/^    function ffmpeg-convert-to-mp4(){$/;"	f
fgrep	aliases/.bash_aliases.d/general.sh	/^alias fgrep='fgrep --colour=always'$/;"	a
file-no-filetype	aliases/.bash_aliases.d/general.sh	/^alias file-no-filetype="${i%.*}"$/;"	a
file-put-quotations-around	aliases/.bash_aliases.d/general.sh	/^function file-put-quotations-around(){$/;"	f
file_insert_after_line	aliases/.bash_aliases.d/general.sh	/^function file_insert_after_line(){$/;"	f
firefox	aliases/.bash_aliases.d/flatpacks.sh	/^    alias firefox='flatpak run --file-forwarding org.mozilla.firefox'$/;"	a
firefox	flatpak/.bash_aliases.d/flatpacks.sh	/^    alias firefox='flatpak run --file-forwarding org.mozilla.firefox'$/;"	a
flatpak	aliases/.bash_aliases.d/flatpacks.sh	/^function flatpak (){$/;"	f
flatpak	flatpak/.bash_aliases.d/flatpacks.sh	/^function flatpak (){$/;"	f
flatseal	aliases/.bash_aliases.d/flatpacks.sh	/^	alias flatseal='flatpak run --file-forwarding com.github.tchx84.Flatseal'$/;"	a
flatseal	flatpak/.bash_aliases.d/flatpacks.sh	/^	alias flatseal='flatpak run --file-forwarding com.github.tchx84.Flatseal'$/;"	a
fzf-alias	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
fzf-all	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:group
fzf-docker-debug-info	fzf/.bash_aliases.d/docker-fzf.sh	/^fzf-docker-debug-info() {$/;"	f
fzf-docker-new-container	fzf/.bash_aliases.d/docker.sh	/^fzf-docker-new-container(){ docker-fzf-new-container; }$/;"	f
fzf-docker-open-container	fzf/.bash_aliases.d/docker.sh	/^fzf-docker-open-container(){ docker-fzf-open-container; }$/;"	f
fzf-docker-show-ip-container	fzf/.bash_aliases.d/docker.sh	/^fzf-docker-show-ip-container(){ docker-fzf-show-ip-container; }$/;"	f
fzf-docker-stop-container	fzf/.bash_aliases.d/docker.sh	/^fzf-docker-stop-container(){ docker-fzf-stop-container; }$/;"	f
fzf-multi	aliases/.bash_aliases.d/fzf.sh	/^alias fzf-multi="fzf --multi"$/;"	a
fzf-wait	aliases/.bash_aliases.d/fzf.sh	/^alias fzf-wait="fzf --sync"$/;"	a
fzf_rifle	aliases/.bash_aliases.d/fzf-rifle.sh	/^fzf_rifle(){$/;"	f
fzf_rifle	fzf/.bash_aliases.d/fzf-rifle.sh	/^fzf_rifle(){$/;"	f
g:NERDTreeFileLines	vim/.config/nvim/init.vim	/^let g:NERDTreeFileLines = 1$/;"	v
g:NERDTreeHijackNetrw	vim/.config/nvim/init.vim	/^let g:NERDTreeHijackNetrw = 0$/;"	v
g:__plugin_args	vim/.config/nvim/plug_lazy_adapter.vim	/^        let g:__plugin_args = l:args$/;"	v
g:airline#extensions#coc#show_coc_status	vim/.config/nvim/init.vim	/^    let g:airline#extensions#coc#show_coc_status = 1$/;"	v
g:airline#extensions#tabline#enabled	vim/.config/nvim/init.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline_exclude_filetypes	vim/.config/nvim/init.vim	/^let g:airline_exclude_filetypes = ['nerdtree']$/;"	v
g:gruvbox_italic	vim/.config/nvim/init.vim	/^let g:gruvbox_italic=1$/;"	v
g:loaded_plug	vim/.config/nvim/plug_lazy_adapter.vim	/^        let g:loaded_plug = 1$/;"	v
g:neomake_python_enabled_makers	vim/.config/nvim/init.vim	/^let g:neomake_python_enabled_makers = ['pylint']$/;"	v
g:netrw_altv	vim/.config/nvim/init.vim	/^let g:netrw_altv = 1$/;"	v
g:netrw_banner	vim/.config/nvim/init.vim	/^let g:netrw_banner = 0$/;"	v
g:netrw_browse_split	vim/.config/nvim/init.vim	/^let g:netrw_browse_split = 4$/;"	v
g:netrw_liststyle	vim/.config/nvim/init.vim	/^let g:netrw_liststyle = 3$/;"	v
g:netrw_winsize	vim/.config/nvim/init.vim	/^let g:netrw_winsize = 25$/;"	v
g:pluginInstallPath	vim/.config/nvim/init.vim	/^let g:pluginInstallPath=expand('~\/.vim\/plugins')$/;"	v
g:python3_host_prog	vim/.config/nvim/init.vim	/^let g:python3_host_prog = '\/usr\/bin\/python3'$/;"	v
g:ranger_command_override	vim/.config/nvim/init.vim	/^let g:ranger_command_override = 'ranger --cmd "set show_hidden=true"'$/;"	v
g:ranger_map_keys	vim/.config/nvim/init.vim	/^let g:ranger_map_keys = 0$/;"	v
g:ranger_replace_netrw	vim/.config/nvim/init.vim	/^let g:ranger_replace_netrw = 1$/;"	v
g:suda#nopass	vim/.config/nvim/init.vim	/^let g:suda#nopass = 1$/;"	v
g:ycm_path_to_python_interpreter	vim/.config/nvim/init.vim	/^let g:ycm_path_to_python_interpreter = '\/usr\/bin\/python3'$/;"	v
gap	neofetch/.config/neofetch/config.conf	/^gap=2$/;"	k
gd	vim/.config/nvim/init.vim	/^    nmap <silent> gd <Plug>(coc-definition)$/;"	m
general	install_aliases.sh	/^    general(){$/;"	f
general_r	install_aliases.sh	/^    general_r(){ $/;"	f
get-first-stringwords	aliases/.bash_aliases.d/general.sh	/^alias get-first-stringwords="frst=\\"\\$(echo \\$words | awk '{print \\$1}')\\" && words=\\"\\$(/;"	a
get-latest-releases-github	aliases/.bash_aliases.d/git.sh	/^    function get-latest-releases-github(){$/;"	f
gi	vim/.config/nvim/init.vim	/^    nmap <silent> gi <Plug>(coc-implementation)$/;"	m
git-add-all	aliases/.bash_aliases.d/git.sh	/^alias git-add-all="git add -A"$/;"	a
git-add-branch	aliases/.bash_aliases.d/git.sh	/^git-add-branch() {$/;"	f
git-add-remote-url	aliases/.bash_aliases.d/git.sh	/^git-add-remote-url() { git remote -v add "$1" "$2"; }$/;"	f
git-add-ssh-key	aliases/.bash_aliases.d/git.sh	/^function git-add-ssh-key() { $/;"	f
git-add-worktree-and-ignore	aliases/.bash_aliases.d/git.sh	/^git-add-worktree-and-ignore(){$/;"	f
git-backup-branch-and-reset-to-remote	aliases/.bash_aliases.d/git.sh	/^git-backup-branch-and-reset-to-remote() {$/;"	f
git-blame-full-branch	aliases/.bash_aliases.d/git.sh	/^alias git-blame-full-branch="git blame -w -C -C -C "$/;"	a
git-blame-linerange	aliases/.bash_aliases.d/git.sh	/^alias git-blame-linerange="git blame -L "$/;"	a
git-commit	aliases/.bash_aliases.d/git.sh	/^function git-commit() {$/;"	f
git-commit-amend	aliases/.bash_aliases.d/git.sh	/^alias git-commit-amend="git commit --amend"$/;"	a
git-commit-push-all	aliases/.bash_aliases.d/git.sh	/^function git-commit-push-all() {$/;"	f
git-config-global-pull-fastforward-only	aliases/.bash_aliases.d/git.sh	/^alias git-config-global-pull-fastforward-only="git config pull.ff only"$/;"	a
git-config-global-pull-rebase-false	aliases/.bash_aliases.d/git.sh	/^alias git-config-global-pull-rebase-false="git config --global pull.rebase false"$/;"	a
git-config-global-pull-rebase-true	aliases/.bash_aliases.d/git.sh	/^alias git-config-global-pull-rebase-true="git config --global pull.rebase true"$/;"	a
git-config-pull-fastforward-only	aliases/.bash_aliases.d/git.sh	/^alias git-config-pull-fastforward-only="git config --global pull.ff only"$/;"	a
git-config-pull-rebase-false	aliases/.bash_aliases.d/git.sh	/^alias git-config-pull-rebase-false="git config pull.rebase false"$/;"	a
git-config-pull-rebase-true	aliases/.bash_aliases.d/git.sh	/^alias git-config-pull-rebase-true="git config pull.rebase true"$/;"	a
git-config-useremail	aliases/.bash_aliases.d/git.sh	/^alias git-config-useremail="git config user.email"$/;"	a
git-config-username	aliases/.bash_aliases.d/git.sh	/^alias git-config-username="git config user.name"$/;"	a
git-create-and-switch-branch	aliases/.bash_aliases.d/git.sh	/^alias git-create-and-switch-branch="git checkout -b - "$/;"	a
git-delete-branch	aliases/.bash_aliases.d/git.sh	/^alias git-delete-branch="git branch -d - "$/;"	a
git-https-to-ssh	aliases/.bash_aliases.d/git.sh	/^git-https-to-ssh(){$/;"	f
git-list-branches	aliases/.bash_aliases.d/git.sh	/^alias git-list-branches="git branch --list -vv"$/;"	a
git-list-config	aliases/.bash_aliases.d/git.sh	/^alias git-list-config="git config --list"$/;"	a
git-list-remotes	aliases/.bash_aliases.d/git.sh	/^alias git-list-remotes="git remote -v"$/;"	a
git-log-grep	aliases/.bash_aliases.d/git.sh	/^alias git-log-grep="git log -S "$/;"	a
git-log-linerange	aliases/.bash_aliases.d/git.sh	/^alias git-log-linerange="git log -L "$/;"	a
git-log-pretty-graph	aliases/.bash_aliases.d/git.sh	/^alias git-log-pretty-graph="git log --graph --all --pretty=format:\\"%x1b[33m%h%x09%x1b[32m%d%x1/;"	a
git-push-to-branch	aliases/.bash_aliases.d/git.sh	/^alias git-push-to-branch="git push -u origin "$/;"	a
git-remote-get-default-branch	aliases/.bash_aliases.d/git.sh	/^function git-remote-get-default-branch() { $/;"	f
git-remote-remove	aliases/.bash_aliases.d/git.sh	/^alias git-remote-remove="git remote -v rm"$/;"	a
git-remote-rename	aliases/.bash_aliases.d/git.sh	/^alias git-remote-rename="git remote -v rename"$/;"	a
git-remote-set-url	aliases/.bash_aliases.d/git.sh	/^alias git-remote-set-url="git remote -v set-url"$/;"	a
git-remove-worktree-and-ignore	aliases/.bash_aliases.d/git.sh	/^git-remove-worktree-and-ignore(){$/;"	f
git-reset-hard	aliases/.bash_aliases.d/git.sh	/^alias git-reset-hard="git reset --hard"$/;"	a
git-safe-force-push	aliases/.bash_aliases.d/git.sh	/^alias git-safe-force-push="git push --force-with-lease"$/;"	a
git-set-default-remote-branch	aliases/.bash_aliases.d/git.sh	/^function git-set-default-remote-branch() { $/;"	f
git-ssh-to-https	aliases/.bash_aliases.d/git.sh	/^git-ssh-to-https(){$/;"	f
git-status	aliases/.bash_aliases.d/git.sh	/^alias git-status="git status"$/;"	a
git-switch-branch	aliases/.bash_aliases.d/git.sh	/^alias git-switch-branch="git checkout - "$/;"	a
git-switch-branch-and-track-remote	aliases/.bash_aliases.d/git.sh	/^alias git-switch-branch-and-track-remote="git checkout -t - "$/;"	a
git-switch-commit	aliases/.bash_aliases.d/git.sh	/^git-switch-commit() {$/;"	f
git-test-conn-github	aliases/.bash_aliases.d/git.sh	/^alias git-test-conn-github="ssh -vT git@github.com;"$/;"	a
git_hl	install_git.sh	/^function git_hl(){$/;"	f
git_pager	install_git.sh	/^git_pager(){$/;"	f
git_r	install_aliases.sh	/^git_r(){ $/;"	f
gith	install_aliases.sh	/^gith(){$/;"	f
gitt	install_git.sh	/^ gitt(){$/;"	f
gpg	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
gpg-alias	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
gpg-all	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:group
gpg-decrypt-asc	aliases/.bash_aliases.d/gpg.sh	/^function gpg-decrypt-asc(){ $/;"	f
gpg-delete-both-keys	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-delete-both-keys="$GPG --yes --delete-secret-and-public-keys"$/;"	a
gpg-delete-both-keys	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-delete-both-keys="$GPG --yes --delete-secret-and-public-keys"$/;"	a
gpg-delete-only-public-key	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-delete-only-public-key="$GPG --yes --delete-keys"$/;"	a
gpg-delete-only-public-key	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-delete-only-public-key="$GPG --yes --delete-keys"$/;"	a
gpg-delete-only-secret-key	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-delete-only-secret-key="$GPG --yes --delete-secret-keys"$/;"	a
gpg-delete-only-secret-key	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-delete-only-secret-key="$GPG --yes --delete-secret-keys"$/;"	a
gpg-edit-key	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-edit-key="$GPG --edit-key"$/;"	a
gpg-edit-key	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-edit-key="$GPG --edit-key"$/;"	a
gpg-encrypt-custom-algo	aliases/.bash_aliases.d/gpg.sh	/^function gpg-encrypt-custom-algo(){$/;"	f
gpg-encrypt-file-asc	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-encrypt-file-asc="gpg --armor --symmetric"$/;"	a
gpg-encrypt-file-gpg	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-encrypt-file-gpg="gpg --symmetric"$/;"	a
gpg-encrypt-file-readable	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-encrypt-file-readable="gpg --armor --symmetric"$/;"	a
gpg-encrypt-file-unreadable	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-encrypt-file-unreadable="gpg --symmetric"$/;"	a
gpg-export-public-and-secret-keys	aliases/.bash_aliases.d/gpg.sh	/^function gpg-export-public-and-secret-keys(){$/;"	f
gpg-export-public-and-secret-keys	gpg/.bash_aliases.d/gpg.sh	/^function gpg-export-public-and-secret-keys(){$/;"	f
gpg-export-public-keys	aliases/.bash_aliases.d/gpg.sh	/^function gpg-export-public-keys(){$/;"	f
gpg-export-public-keys	gpg/.bash_aliases.d/gpg.sh	/^function gpg-export-public-keys(){$/;"	f
gpg-export-secret-keys	aliases/.bash_aliases.d/gpg.sh	/^function gpg-export-secret-keys(){$/;"	f
gpg-export-secret-keys	gpg/.bash_aliases.d/gpg.sh	/^function gpg-export-secret-keys(){$/;"	f
gpg-generate-key-full	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-generate-key-full="$GPG --full-generate-key"$/;"	a
gpg-generate-key-full	aliases/.bash_aliases.d/gpg.sh	/^function gpg-generate-key-full(){$/;"	f
gpg-generate-key-full	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-generate-key-full="$GPG --full-generate-key"$/;"	a
gpg-generate-key-full	gpg/.bash_aliases.d/gpg.sh	/^function gpg-generate-key-full(){$/;"	f
gpg-generate-key-only-name-email	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-generate-key-only-name-email="$GPG --generate-key"$/;"	a
gpg-generate-key-only-name-email	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-generate-key-only-name-email="$GPG --generate-key"$/;"	a
gpg-get-emails-exported-browserlogins-and-generate-keys	aliases/.bash_aliases.d/gpg.sh	/^function gpg-get-emails-exported-browserlogins-and-generate-keys(){$/;"	f
gpg-get-emails-exported-browserlogins-and-generate-keys	gpg/.bash_aliases.d/gpg.sh	/^function gpg-get-emails-exported-browserlogins-and-generate-keys(){$/;"	f
gpg-import	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-import="$GPG --import"$/;"	a
gpg-import	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-import="$GPG --import"$/;"	a
gpg-list-config	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-config="$GPG --list-config --with-colons"$/;"	a
gpg-list-config	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-config="$GPG --list-config --with-colons"$/;"	a
gpg-list-key-fingerprints	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-key-fingerprints="$GPG --list-keys --list-options show-only-fpr-mbox | awk '{prin/;"	a
gpg-list-key-fingerprints	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-key-fingerprints="$GPG --list-keys --list-options show-only-fpr-mbox | awk '{prin/;"	a
gpg-list-keyfile-info	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-keyfile-info="$GPG --import-options show-only" $/;"	a
gpg-list-keyfile-info	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-keyfile-info="$GPG --import-options show-only" $/;"	a
gpg-list-known-keyservers	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-known-keyservers="grep --color=never "^keyserver" $GNUPGHOME\/gpg.conf | grep -v /;"	a
gpg-list-known-keyservers	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-known-keyservers="grep --color=never "^keyserver" $GNUPGHOME\/gpg.conf | grep -v /;"	a
gpg-list-packets-from-key	aliases/.bash_aliases.d/gpg.sh	/^function gpg-list-packets-from-key(){$/;"	f
gpg-list-packets-from-key	gpg/.bash_aliases.d/gpg.sh	/^function gpg-list-packets-from-key(){$/;"	f
gpg-list-privatekey-mails	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-privatekey-mails="$GPG --list-secret-keys | grep --color=never \\< | cut -d'<' -f/;"	a
gpg-list-privatekey-mails	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-privatekey-mails="$GPG --list-secret-keys | grep --color=never \\< | cut -d'<' -f/;"	a
gpg-list-public-fingerprints	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-fingerprints="$GPG --list-keys --list-options show-only-fpr-mbox | awk '{p/;"	a
gpg-list-public-fingerprints	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-fingerprints="$GPG --list-keys --list-options show-only-fpr-mbox | awk '{p/;"	a
gpg-list-public-fingerprints-mail	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-fingerprints-mail="$GPG --list-keys --list-options show-only-fpr-mbox" $/;"	a
gpg-list-public-fingerprints-mail	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-fingerprints-mail="$GPG --list-keys --list-options show-only-fpr-mbox" $/;"	a
gpg-list-public-keyid-long	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-keyid-long="$GPG --list-public-keys --list-options show-only-fpr-mbox | aw/;"	a
gpg-list-public-keyid-long	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-keyid-long="$GPG --list-public-keys --list-options show-only-fpr-mbox | aw/;"	a
gpg-list-public-keyid-long-mail	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-keyid-long-mail="$GPG --list-public-keys --list-options show-only-fpr-mbox/;"	a
gpg-list-public-keyid-long-mail	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-keyid-long-mail="$GPG --list-public-keys --list-options show-only-fpr-mbox/;"	a
gpg-list-public-keyid-short	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-keyid-short="$GPG --list-public-keys --list-options show-only-fpr-mbox | a/;"	a
gpg-list-public-keyid-short	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-keyid-short="$GPG --list-public-keys --list-options show-only-fpr-mbox | a/;"	a
gpg-list-public-keyid-short-mail	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-keyid-short-mail="$GPG --list-public-keys --list-options show-only-fpr-mbo/;"	a
gpg-list-public-keyid-short-mail	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-keyid-short-mail="$GPG --list-public-keys --list-options show-only-fpr-mbo/;"	a
gpg-list-public-keys	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-keys="$GPG --list-public-keys" $/;"	a
gpg-list-public-keys	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-public-keys="$GPG --list-public-keys" $/;"	a
gpg-list-publickey-mails	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-publickey-mails="$GPG --list-keys | grep --color=never \\< | cut -d'<' -f2- | cut/;"	a
gpg-list-publickey-mails	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-publickey-mails="$GPG --list-keys | grep --color=never \\< | cut -d'<' -f2- | cut/;"	a
gpg-list-secret-keys	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-list-secret-keys="$GPG --list-secret-keys"$/;"	a
gpg-list-secret-keys	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-list-secret-keys="$GPG --list-secret-keys"$/;"	a
gpg-publish-key	aliases/.bash_aliases.d/gpg.sh	/^function gpg-publish-key() {$/;"	f
gpg-publish-key	gpg/.bash_aliases.d/gpg.sh	/^function gpg-publish-key() {$/;"	f
gpg-receive-keys-keyserver-by-fingerprints	aliases/.bash_aliases.d/gpg.sh	/^function gpg-receive-keys-keyserver-by-fingerprints() {$/;"	f
gpg-receive-keys-keyserver-by-fingerprints	gpg/.bash_aliases.d/gpg.sh	/^function gpg-receive-keys-keyserver-by-fingerprints() {$/;"	f
gpg-refresh-keys	aliases/.bash_aliases.d/gpg.sh	/^alias gpg-refresh-keys='gpg --refresh-keys'$/;"	a
gpg-refresh-keys	gpg/.bash_aliases.d/gpg.sh	/^alias gpg-refresh-keys='gpg --refresh-keys'$/;"	a
gpg-search-keys-keyserver-by-mail	aliases/.bash_aliases.d/gpg.sh	/^function gpg-search-keys-keyserver-by-mail() {$/;"	f
gpg-search-keys-keyserver-by-mail	gpg/.bash_aliases.d/gpg.sh	/^function gpg-search-keys-keyserver-by-mail() {$/;"	f
gpu_brand	neofetch/.config/neofetch/config.conf	/^gpu_brand="on"$/;"	k
gpu_type	neofetch/.config/neofetch/config.conf	/^gpu_type="all"$/;"	k
gr	vim/.config/nvim/init.vim	/^    nmap <silent> gr <Plug>(coc-references)$/;"	m
grep	aliases/.bash_aliases.d/general.sh	/^alias grep='grep --colour=always'$/;"	a
grep-no-case-sensitivwe	aliases/.bash_aliases.d/general.sh	/^alias grep-no-case-sensitivwe='grep -i'$/;"	a
grep-no-color	aliases/.bash_aliases.d/general.sh	/^alias grep-no-color='grep --color=never'$/;"	a
group	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
gtk2	neofetch/.config/neofetch/config.conf	/^gtk2="on"$/;"	k
gtk3	neofetch/.config/neofetch/config.conf	/^gtk3="on"$/;"	k
gtk_shorthand	neofetch/.config/neofetch/config.conf	/^gtk_shorthand="on"$/;"	k
gy	vim/.config/nvim/init.vim	/^    nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
gzip	vim/.config/nvim/init.vim	/^augroup gzip$/;"	a
handle_extension	ranger/.config/ranger/scope.sh	/^handle_extension() {$/;"	f
handle_fallback	ranger/.config/ranger/scope.sh	/^handle_fallback() {$/;"	f
handle_image	ranger/.config/ranger/scope.sh	/^handle_image() {$/;"	f
handle_mime	ranger/.config/ranger/scope.sh	/^handle_mime() {$/;"	f
helpsection	aliases/.bash_aliases.d/package_managers.sh	/^            helpsection() $/;"	f
helpsection	checks/check_system.sh	/^    helpsection() $/;"	f
hlstate	vim/.config/nvim/init.vim	/^let hlstate=0$/;"	v
ic	vim/.config/nvim/init.vim	/^    omap ic <Plug>(coc-classobj-i)$/;"	m
ic	vim/.config/nvim/init.vim	/^    xmap ic <Plug>(coc-classobj-i)$/;"	m
if	vim/.config/nvim/init.vim	/^    omap if <Plug>(coc-funcobj-i)$/;"	m
if	vim/.config/nvim/init.vim	/^    xmap if <Plug>(coc-funcobj-i)$/;"	m
image_backend	neofetch/.config/neofetch/config.conf	/^image_backend="auto"$/;"	k
image_loop	neofetch/.config/neofetch/config.conf	/^image_loop="off"$/;"	k
image_size	neofetch/.config/neofetch/config.conf	/^image_size="160px"$/;"	k
image_source	neofetch/.config/neofetch/config.conf	/^image_source='auto'$/;"	k
ins_ffmpg	install_ffmpeg.sh	/^						function ins_ffmpg(){$/;"	f
ins_ffmpg_r	install_ffmpeg.sh	/^						function ins_ffmpg_r(){$/;"	f
ins_nix	install_nix.sh	/^    function ins_nix(){$/;"	f
ins_nix_r	install_nix.sh	/^    function ins_nix_r(){$/;"	f
install_tmux_login_for_ssh	tmux/.bash_aliases.d/tmux.sh	/^function install_tmux_login_for_ssh(){$/;"	f
instvim	install_nvim.sh	/^function instvim(){$/;"	f
instvim_r	install_nvim.sh	/^function instvim_r(){$/;"	f
iommu-groups	aliases/.bash_aliases.d/general.sh	/^function iommu-groups(){$/;"	f
ip-adress	aliases/.bash_aliases.d/general.sh	/^alias ip-adress="wget -qO - https:\/\/api.ipify.org; echo"$/;"	a
j	vim/.config/nvim/init.vim	/^nnoremap <expr> j (getline(".")[col(".")-1] != "" ? 'gj' : 'j')$/;"	m
j	vim/.config/nvim/init.vim	/^vnoremap <expr> j (getline(".")[col(".")-1] != "" ? 'gj' : 'j')$/;"	m
k	vim/.config/nvim/init.vim	/^nnoremap <expr> k (getline(".")[col(".")-1] != "" ? 'gk' : 'k')$/;"	m
k	vim/.config/nvim/init.vim	/^vnoremap <expr> k (getline(".")[col(".")-1] != "" ? 'gk' : 'k')$/;"	m
kernel_shorthand	neofetch/.config/neofetch/config.conf	/^kernel_shorthand="off"$/;"	k
key	tmux/.tmux.conf	/^bind-key : command-prompt$/;"	k
keybinds	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
keybinds-all	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:group
keybinds-bash	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
keyserver hkps	gpg/.gnupg/gpg.conf	/^keyserver hkps:\/\/api.protonmail.ch$/;"	k
keyserver hkps	gpg/.gnupg/gpg.conf	/^keyserver hkps:\/\/keys.mailvelope.com$/;"	k
kill-all-jobs	aliases/.bash_aliases.d/general.sh	/^alias kill-all-jobs="kill -9 \\$(jobs -p)"$/;"	a
kill-signals	aliases/.bash_aliases.d/general.sh	/^alias kill-signals="kill -l"$/;"	a
kitty	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
kitty_conf	install_kitty.sh	/^    function kitty_conf(){$/;"	f
kitty_remote_fix	aliases/.bash_aliases.d/kitty.sh	/^    alias kitty_remote_fix="sudo apt install kitty-terminfo"$/;"	a
kitty_remote_fix	aliases/.bash_aliases.d/kitty.sh	/^    alias kitty_remote_fix="sudo pacman -S kitty-terminfo"$/;"	a
kitty_remote_fix	kitty/.bash_aliases.d/kitty.sh	/^    alias kitty_remote_fix="sudo apt install kitty-terminfo"$/;"	a
kitty_remote_fix	kitty/.bash_aliases.d/kitty.sh	/^    alias kitty_remote_fix="sudo pacman -S kitty-terminfo"$/;"	a
kitty_remote_fix_alt	aliases/.bash_aliases.d/kitty.sh	/^alias kitty_remote_fix_alt="infocmp -a xterm-kitty | ssh funnyman@192.168.129.17 tic -x -o \\~\//;"	a
kitty_remote_fix_alt	kitty/.bash_aliases.d/kitty.sh	/^alias kitty_remote_fix_alt="infocmp -a xterm-kitty | ssh funnyman@192.168.129.17 tic -x -o \\~\//;"	a
label trash	ranger/.config/ranger/rifle.conf	/^label trash = mkdir -p -- ${XDG_DATA_DIR:-$HOME\/.ranger}\/ranger-trash; mv -- "$@" ${XDG_DATA_D/;"	k
lazygit	aliases/.bash_aliases.d/variety.sh	/^    alias lazygit="copy-to run && lazygit"$/;"	a
lazygit	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
lazygit-alias	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
left	ranger/.config/ranger/rc.conf	/^cmap <a-b> eval fm.ui.console.move_word(left=1)$/;"	k
left	ranger/.config/ranger/rc.conf	/^cmap <left>  eval fm.ui.console.move(left=1)$/;"	k
line2word	aliases/.bash_aliases.d/general.sh	/^alias line2word="tr '\\n' ' '"$/;"	a
lines-to-words	aliases/.bash_aliases.d/general.sh	/^function lines-to-words(){$/;"	f
list-GPU-drivers	aliases/.bash_aliases.d/general.sh	/^alias list-GPU-drivers="inxi -G"$/;"	a
list-aliases-bash	aliases/.bash_aliases.d/bash.sh	/^alias list-aliases-bash="compgen -a | $PAGER"$/;"	a
list-all-symlinks	aliases/.bash_aliases.d/find.sh	/^    alias list-all-symlinks="fd --search-path \/ --type symlink $tree | $PAGER"$/;"	a
list-all-symlinks	aliases/.bash_aliases.d/find.sh	/^    alias list-all-symlinks="find \/ -type l -exec ls --color -d {} \\; $tree | $PAGER"$/;"	a
list-binds-kitty	keybinds/.keybinds.d/keybinds.bash	/^alias list-binds-kitty='kitty +kitten show_key -m kitty' $/;"	a
list-binds-readline	keybinds/.keybinds.d/keybinds.bash	/^alias list-binds-readline="{ printf \\"\\nList commands bound to keys\\n\\n\\n\\" ; bind -X ; ec/;"	a
list-binds-stty	keybinds/.keybinds.d/keybinds.bash	/^alias list-binds-stty="stty -a"$/;"	a
list-binds-xterm	keybinds/.keybinds.d/keybinds.bash	/^alias list-binds-xterm="xrdb -query -all"$/;"	a
list-builtins-bash	aliases/.bash_aliases.d/bash.sh	/^alias list-builtins-bash="compgen -b | $PAGER"$/;"	a
list-commands-bash	aliases/.bash_aliases.d/bash.sh	/^alias list-commands-bash="compgen -c | $PAGER"$/;"	a
list-dir-symlinks	aliases/.bash_aliases.d/find.sh	/^    alias list-dir-symlinks="fd --search-path . --type symlink $tree | $PAGER"$/;"	a
list-dir-symlinks	aliases/.bash_aliases.d/find.sh	/^    alias list-dir-symlinks="find . -type l -exec ls --color -d {} \\; $tree | $PAGER"$/;"	a
list-directory-bash	aliases/.bash_aliases.d/bash.sh	/^alias list-directory-bash="compgen -d | $PAGER"$/;"	a
list-drivers-modules-in-use	aliases/.bash_aliases.d/general.sh	/^alias list-drivers-modules-in-use="lspci -nnk"$/;"	a
list-exports-bash	aliases/.bash_aliases.d/bash.sh	/^alias list-exports-bash="compgen -e | $PAGER"$/;"	a
list-file-and-dirs-bash	aliases/.bash_aliases.d/bash.sh	/^alias list-file-and-dirs-bash="compgen -f | $PAGER"$/;"	a
list-function-content-bash	aliases/.bash_aliases.d/bash.sh	/^alias list-function-content-bash="declare -f"$/;"	a
list-functions-bash	aliases/.bash_aliases.d/bash.sh	/^alias list-functions-bash="compgen -A function | $PAGER"$/;"	a
list-groups-bash	aliases/.bash_aliases.d/bash.sh	/^alias list-groups-bash="compgen -g | $PAGER"$/;"	a
list-keywords-bash	aliases/.bash_aliases.d/bash.sh	/^alias list-keywords-bash="compgen -k | $PAGER"$/;"	a
list-kill-signals	aliases/.bash_aliases.d/general.sh	/^alias list-kill-signals="kill -l"$/;"	a
list-services-bash	aliases/.bash_aliases.d/bash.sh	/^alias list-services-bash="compgen -s | $PAGER"$/;"	a
list-shellvars-bash	aliases/.bash_aliases.d/bash.sh	/^alias list-shellvars-bash="compgen -v | $PAGER"$/;"	a
list-users-bash	aliases/.bash_aliases.d/bash.sh	/^alias list-users-bash="compgen -u | $PAGER"$/;"	a
listen_on unix	kitty/.config/kitty/kitty.conf	/^listen_on unix:\/tmp\/kitty$/;"	k
listen_on unix	kitty/kitty.conf	/^listen_on unix:\/tmp\/kitty$/;"	k
ln-hard	aliases/.bash_aliases.d/general.sh	/^function ln-hard(){$/;"	f
ln-soft	aliases/.bash_aliases.d/general.sh	/^function ln-soft(){$/;"	f
localauth_conf	install_polkit_wheel.sh	/^    function localauth_conf(){$/;"	f
localauth_conf_d	install_polkit_wheel.sh	/^    function localauth_conf_d(){$/;"	f
locales-list-enabled	aliases/.bash_aliases.d/general.sh	/^alias locales-list-enabled="locale -a"$/;"	a
lower2upper	aliases/.bash_aliases.d/general.sh	/^alias lower2upper="tr '[:lower:]' '[:upper:]'"$/;"	a
lowfi-play	aliases/.bash_aliases.d/variety.sh	/^    alias lowfi-play="lowfi play"$/;"	a
ls	aliases/.bash_aliases.d/general.sh	/^alias ls="ls --color=always"$/;"	a
ls-all	aliases/.bash_aliases.d/general.sh	/^    alias ls-all="eza -A --long --git --header"$/;"	a
ls-all	aliases/.bash_aliases.d/general.sh	/^alias ls-all="ls -Ahl"$/;"	a
ls-dirs	aliases/.bash_aliases.d/general.sh	/^    alias ls-dirs="eza -A --only-dirs" $/;"	a
ls-dirs	aliases/.bash_aliases.d/general.sh	/^alias ls-dirs="ls -Ahp | grep \\".*\/$\\""$/;"	a
ls-dirtop	aliases/.bash_aliases.d/general.sh	/^    alias ls-dirtop="eza --group-directories-first"$/;"	a
ls-dirtop	aliases/.bash_aliases.d/general.sh	/^alias ls-dirtop="ls --group-directories-first"$/;"	a
ls-files	aliases/.bash_aliases.d/general.sh	/^    alias ls-files="eza -A --only-files"$/;"	a
ls-files	aliases/.bash_aliases.d/general.sh	/^alias ls-files="ls -Ahp | grep -v \/"$/;"	a
ls-git	aliases/.bash_aliases.d/general.sh	/^    alias ls-git="eza-git"$/;"	a
man-a	vim/.bash_aliases.d/vim_nvim.sh	/^    alias man-a="man-all-nvim"                                                               $/;"	a
man-all	vim/.bash_aliases.d/vim_nvim.sh	/^    alias man-all="man-all-nvim"                                                               $/;"	a
man-all-nvim	vim/.bash_aliases.d/vim_nvim.sh	/^    function man-all-nvim() {                                                               $/;"	f
man-bash	aliases/.bash_aliases.d/bash.sh	/^man-bash(){$/;"	f
mana	vim/.bash_aliases.d/vim_nvim.sh	/^    alias mana="man-all-nvim"                                                               $/;"	a
manj	install_aliases.sh	/^    manj(){$/;"	f
manj_r	install_aliases.sh	/^    manj_r(){ $/;"	f
manjaro-GPU-check-driver	aliases/.bash_aliases.d/manjaro.sh	/^alias manjaro-GPU-check-driver="sudo mhwd-gpu --check"$/;"	a
manjaro-GPU-install-driver-free	aliases/.bash_aliases.d/manjaro.sh	/^alias manjaro-GPU-install-driver-free="sudo mhwd -a pci free 0300"$/;"	a
manjaro-GPU-install-driver-proprietary	aliases/.bash_aliases.d/manjaro.sh	/^alias manjaro-GPU-install-driver-proprietary="sudo mhwd -a pci nonfree 0300"$/;"	a
manjaro-GPU-list-drivers	aliases/.bash_aliases.d/manjaro.sh	/^alias manjaro-GPU-list-drivers="sudo mhwd -l -d"$/;"	a
manjaro-GPU-list-installed-drivers	aliases/.bash_aliases.d/manjaro.sh	/^alias manjaro-GPU-list-installed-drivers="sudo mhwd -li -d" $/;"	a
manjaro-GPU-remove-driver-by-name	aliases/.bash_aliases.d/manjaro.sh	/^function manjaro-GPU-remove-driver-by-name(){$/;"	f
manjaro-GPU-set-module-driver	aliases/.bash_aliases.d/manjaro.sh	/^alias manjaro-GPU-set-module-driver="sudo mhwd-gpu --setmod"$/;"	a
manjaro-GPU-status-driver	aliases/.bash_aliases.d/manjaro.sh	/^alias manjaro-GPU-status-driver="sudo mhwd-gpu --status"$/;"	a
manjaro-install-kernel	aliases/.bash_aliases.d/manjaro.sh	/^function manjaro-install-kernel(){$/;"	f
manjaro-remove-kernel	aliases/.bash_aliases.d/manjaro.sh	/^function manjaro-remove-kernel(){$/;"	f
manjaro-update-packages	aliases/.bash_aliases.d/package_managers.sh	/^        alias manjaro-update-packages="pamac-update"$/;"	a
manjaro-upgrade	aliases/.bash_aliases.d/package_managers.sh	/^        alias manjaro-upgrade="pamac upgrade"$/;"	a
map	ranger/.config/ranger/rc.conf	/^map :  console$/;"	k
map	ranger/.config/ranger/rc.conf	/^map =  chmod$/;"	k
map J  move down	ranger/.config/ranger/rc.conf	/^map J  move down=0.5  pages=True$/;"	k
map K  move up	ranger/.config/ranger/rc.conf	/^map K  move up=0.5    pages=True$/;"	k
map N  search_next forward	ranger/.config/ranger/rc.conf	/^map N  search_next forward=False$/;"	k
map ca search_next order	ranger/.config/ranger/rc.conf	/^map ca search_next order=atime$/;"	k
map cc search_next order	ranger/.config/ranger/rc.conf	/^map cc search_next order=ctime$/;"	k
map ci search_next order	ranger/.config/ranger/rc.conf	/^map ci search_next order=mimetype$/;"	k
map cm search_next order	ranger/.config/ranger/rc.conf	/^map cm search_next order=mtime$/;"	k
map cs search_next order	ranger/.config/ranger/rc.conf	/^map cs search_next order=size$/;"	k
map ct search_next order	ranger/.config/ranger/rc.conf	/^map ct search_next order=tag$/;"	k
map da cut mode	ranger/.config/ranger/rc.conf	/^map da cut mode=add$/;"	k
map dr cut mode	ranger/.config/ranger/rc.conf	/^map dr cut mode=remove$/;"	k
map dt cut mode	ranger/.config/ranger/rc.conf	/^map dt cut mode=toggle$/;"	k
map oA chain set sort	ranger/.config/ranger/rc.conf	/^map oA chain set sort=atime;     set sort_reverse=True$/;"	k
map oB chain set sort	ranger/.config/ranger/rc.conf	/^map oB chain set sort=basename;  set sort_reverse=True$/;"	k
map oC chain set sort	ranger/.config/ranger/rc.conf	/^map oC chain set sort=ctime;     set sort_reverse=True$/;"	k
map oE chain set sort	ranger/.config/ranger/rc.conf	/^map oE chain set sort=extension; set sort_reverse=True$/;"	k
map oM chain set sort	ranger/.config/ranger/rc.conf	/^map oM chain set sort=mtime;     set sort_reverse=True$/;"	k
map oN chain set sort	ranger/.config/ranger/rc.conf	/^map oN chain set sort=natural;   set sort_reverse=True$/;"	k
map oS chain set sort	ranger/.config/ranger/rc.conf	/^map oS chain set sort=size;      set sort_reverse=True$/;"	k
map oT chain set sort	ranger/.config/ranger/rc.conf	/^map oT chain set sort=type;      set sort_reverse=True$/;"	k
map oa chain set sort	ranger/.config/ranger/rc.conf	/^map oa chain set sort=atime;     set sort_reverse=False$/;"	k
map ob chain set sort	ranger/.config/ranger/rc.conf	/^map ob chain set sort=basename;  set sort_reverse=False$/;"	k
map oc chain set sort	ranger/.config/ranger/rc.conf	/^map oc chain set sort=ctime;     set sort_reverse=False$/;"	k
map oe chain set sort	ranger/.config/ranger/rc.conf	/^map oe chain set sort=extension; set sort_reverse=False$/;"	k
map om chain set sort	ranger/.config/ranger/rc.conf	/^map om chain set sort=mtime;     set sort_reverse=False$/;"	k
map on chain set sort	ranger/.config/ranger/rc.conf	/^map on chain set sort=natural;   set sort_reverse=False$/;"	k
map os chain set sort	ranger/.config/ranger/rc.conf	/^map os chain set sort=size;      set sort_reverse=False$/;"	k
map ot chain set sort	ranger/.config/ranger/rc.conf	/^map ot chain set sort=type;      set sort_reverse=False$/;"	k
map oz set sort	ranger/.config/ranger/rc.conf	/^map oz set sort=random$/;"	k
map pL paste_symlink relative	ranger/.config/ranger/rc.conf	/^map pL paste_symlink relative=True$/;"	k
map pO paste overwrite	ranger/.config/ranger/rc.conf	/^map pO paste overwrite=True append=True$/;"	k
map pP paste append	ranger/.config/ranger/rc.conf	/^map pP paste append=True$/;"	k
map pd console paste dest	ranger/.config/ranger/rc.conf	/^map pd console paste dest=$/;"	k
map pl paste_symlink relative	ranger/.config/ranger/rc.conf	/^map pl paste_symlink relative=False$/;"	k
map po paste overwrite	ranger/.config/ranger/rc.conf	/^map po paste overwrite=True$/;"	k
map uV      toggle_visual_mode reverse	ranger/.config/ranger/rc.conf	/^map uV      toggle_visual_mode reverse=True$/;"	k
map uv      mark_files all	ranger/.config/ranger/rc.conf	/^map uv      mark_files all=True val=False$/;"	k
map v       mark_files all	ranger/.config/ranger/rc.conf	/^map v       mark_files all=True toggle=True$/;"	k
map ya copy mode	ranger/.config/ranger/rc.conf	/^map ya copy mode=add$/;"	k
map yr copy mode	ranger/.config/ranger/rc.conf	/^map yr copy mode=remove$/;"	k
map yt copy mode	ranger/.config/ranger/rc.conf	/^map yt copy mode=toggle$/;"	k
memory_display	neofetch/.config/neofetch/config.conf	/^memory_display="off"$/;"	k
memory_percent	neofetch/.config/neofetch/config.conf	/^memory_percent="on"$/;"	k
memory_unit	neofetch/.config/neofetch/config.conf	/^memory_unit="mib"$/;"	k
men	aliases/.bash_aliases.d/general.sh	/^alias men="man man"$/;"	a
microsoft-edge	aliases/.bash_aliases.d/flatpacks.sh	/^	alias microsoft-edge='flatpak run --file-forwarding com.microsoft.Edge'$/;"	a
microsoft-edge	flatpak/.bash_aliases.d/flatpacks.sh	/^	alias microsoft-edge='flatpak run --file-forwarding com.microsoft.Edge'$/;"	a
minecraft_ti	aliases/.bash_aliases.d/ssh.sh	/^alias minecraft_ti="ssh -XY -i $ssh_file2 $user2@$ip2"$/;"	a
mkbz2	aliases/.bash_aliases.d/general.sh	/^alias mkbz2='tar -cvjf'$/;"	a
mkdir	aliases/.bash_aliases.d/general.sh	/^alias mkdir="mkdir -pv"$/;"	a
mkgz	aliases/.bash_aliases.d/general.sh	/^alias mkgz='tar -cvzf'$/;"	a
mktar	aliases/.bash_aliases.d/general.sh	/^alias mktar='tar -cvf'$/;"	a
mobo	aliases/.bash_aliases.d/general.sh	/^alias mobo="sudo dmidecode -t 1"$/;"	a
motherboard	aliases/.bash_aliases.d/general.sh	/^alias motherboard="sudo dmidecode -t 1"$/;"	a
move	aliases/.bash_aliases.d/general.sh	/^alias move="mv"$/;"	a
move_sshfs	aliases/.bash_aliases.d/ssh.sh	/^move_sshfs(){ cp -r --no-preserve=mode "$1" "$2" && rmTrash "$1"; }$/;"	f
mpc_args	neofetch/.config/neofetch/config.conf	/^mpc_args=()$/;"	k
mullvad-sessions	aliases/.bash_aliases.d/variety.sh	/^    function mullvad-sessions(){$/;"	f
music_player	neofetch/.config/neofetch/config.conf	/^music_player="auto"$/;"	k
mv	aliases/.bash_aliases.d/general.sh	/^alias mv="mv -v"$/;"	a
mv	aliases/.bash_aliases.d/general.sh	/^alias mv="mv-trash -v"$/;"	a
mv-dir-to	aliases/.bash_aliases.d/general.sh	/^function mv-dir-to(){$/;"	f
mv-trash	aliases/.bash_aliases.d/general.sh	/^function mv-trash(){$/;"	f
mvOld	aliases/.bash_aliases.d/general.sh	/^alias mvOld="mv -nv"$/;"	a
mygroup	vim/.config/nvim/init.vim	/^    augroup mygroup$/;"	a
neofetch_conf	install_neofetch_onefetch.sh	/^                function neofetch_conf() {$/;"	f
neovim	aliases/.bash_aliases.d/flatpacks.sh	/^	alias neovim='flatpak run --file-forwarding io.neovim.nvim'$/;"	a
neovim	flatpak/.bash_aliases.d/flatpacks.sh	/^	alias neovim='flatpak run --file-forwarding io.neovim.nvim'$/;"	a
net-open-ports-outgoing	aliases/.bash_aliases.d/variety.sh	/^    function net-open-ports-outgoing(){$/;"	f
netstat-ip4v6-group-membership	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-ip4v6-group-membership='netstat -g | $PAGER' $/;"	a
netstat-is-installed-but-use-ss	aliases/.bash_aliases.d/variety.sh	/^        alias netstat-is-installed-but-use-ss='ss'$/;"	a
netstat-kernel-interface	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-kernel-interface='netstat -iee | $PAGER' $/;"	a
netstat-list-all-ports	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-list-all-ports="netstat -a"$/;"	a
netstat-list-all-ports-tcp	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-list-all-ports-tcp="netstat -at"$/;"	a
netstat-list-all-ports-udp	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-list-all-ports-udp="netstat -au"$/;"	a
netstat-masquerades	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-masquerades='netstat -M | $PAGER' $/;"	a
netstat-open-ports-listening-all	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-open-ports-listening-all='netstat -nalpeec | $PAGER' $/;"	a
netstat-open-ports-listening-no-unix	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-open-ports-listening-no-unix='netstat -ntulpeec | $PAGER' $/;"	a
netstat-open-ports-listening-tcp	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-open-ports-listening-tcp='netstat -ntlpeec | $PAGER' $/;"	a
netstat-open-ports-listening-udp	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-open-ports-listening-udp='netstat -nulpeec | $PAGER' $/;"	a
netstat-open-ports-listening-unix	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-open-ports-listening-unix='netstat -nxlpeec | $PAGER' $/;"	a
netstat-routing-table-kernel	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-routing-table-kernel='netstat -r | $PAGER' $/;"	a
netstat-search-program-port	aliases/.bash_aliases.d/variety.sh	/^    function netstat-search-program-port(){$/;"	f
netstat-stats	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-stats='netstat -s | $PAGER' $/;"	a
netstat-stats-tcp	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-stats-tcp='netstat -st | $PAGER' $/;"	a
netstat-stats-udp	aliases/.bash_aliases.d/variety.sh	/^    alias netstat-stats-udp='netstat -su | $PAGER' $/;"	a
nix-clean	aliases/.bash_aliases.d/nix.sh	/^alias nix-clean="nix-collect-garbage"$/;"	a
nix-hold-package	aliases/.bash_aliases.d/nix.sh	/^alias nix-hold-package="nix-env --set-flag keep true "$/;"	a
nix-install_	aliases/.bash_aliases.d/nix.sh	/^alias nix-install_="nix-env -iA nixpkgs."$/;"	a
nix-list	aliases/.bash_aliases.d/nix.sh	/^alias nix-list="nix-env -q"$/;"	a
nix-list-all-packages	aliases/.bash_aliases.d/nix.sh	/^alias nix-list-all-packages="nix-env -qaP"$/;"	a
nix-list-backups	aliases/.bash_aliases.d/nix.sh	/^alias nix-list-backups="nix-env --list-generations"$/;"	a
nix-rollback	aliases/.bash_aliases.d/nix.sh	/^alias nix-rollback="nix-env --rollback"$/;"	a
nix-rollback_specific	aliases/.bash_aliases.d/nix.sh	/^alias nix-rollback_specific="nix-env --switch-generation"$/;"	a
nix-uninstall	aliases/.bash_aliases.d/nix.sh	/^alias nix-uninstall="nix-env -e"$/;"	a
nix-update	aliases/.bash_aliases.d/nix.sh	/^alias nix-update="nix-env -u"$/;"	a
nix-upgrade_	aliases/.bash_aliases.d/nix.sh	/^alias nix-upgrade_="nix-env --upgrade -A nixpkgs."$/;"	a
nix_fix_desktop_files	aliases/.bash_aliases.d/nix.sh	/^alias nix_fix_desktop_files="ln -s \/home\/$USER\/.nix-profile\/share\/applications\/* \/home\/$/;"	a
nix_upgrade	aliases/.bash_aliases.d/nix.sh	/^alias nix_upgrade="nix-channel --update; nix-env -iA nixpkgs.nix nixpkgs.cacert"$/;"	a
nix_upgrade_root	aliases/.bash_aliases.d/nix.sh	/^alias nix_upgrade_root="nix-channel --update; nix-env -iA nixpkgs.nix nixpkgs.cacert; systemctl /;"	a
no-error	aliases/.bash_aliases.d/general.sh	/^alias no-error="2> \/dev\/null"$/;"	a
no-output	aliases/.bash_aliases.d/general.sh	/^alias no-output="&> \/dev\/null"$/;"	a
npm-update	aliases/.bash_aliases.d/package_managers.sh	/^    alias npm-update="npm update"$/;"	a
only1space	aliases/.bash_aliases.d/general.sh	/^alias only1space="tr -s ' '"$/;"	a
open	ranger/.config/ranger/rifle.conf	/^label open, has xdg-open = xdg-open -- "$@"$/;"	k
options timeout	gpg/.gnupg/gpg.conf	/^keyserver-options timeout=10$/;"	k
os_arch	neofetch/.config/neofetch/config.conf	/^os_arch="on"$/;"	k
osc-print-to-prompt	keybinds/.keybinds.d/keybinds.bash	/^    function osc-print-to-prompt(){$/;"	f
output-null	aliases/.bash_aliases.d/general.sh	/^alias output-null="> \/dev\/null"$/;"	a
p	vim/.config/nvim/init.vim	/^nnoremap p "+p$/;"	m
p	vim/.config/nvim/init.vim	/^vnoremap p "+p  $/;"	m
package_managers	neofetch/.config/neofetch/config.conf	/^package_managers="tiny"$/;"	k
packman	install_aliases.sh	/^packman(){$/;"	f
packman_r	install_aliases.sh	/^packman_r(){ $/;"	f
pacman-create-default-mirrors-and-forcerefresh	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-create-default-mirrors-and-forcerefresh="sudo pacman-mirrors -f 5 && sudo pacma/;"	a
pacman-create-default-mirrors-and-refresh	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-create-default-mirrors-and-refresh="sudo pacman-mirrors -f 5 && sudo pacman -Sy/;"	a
pacman-forcerefresh-update	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-forcerefresh-update="sudo pacman -Syyu"$/;"	a
pacman-fzf-install	aliases/.bash_aliases.d/package_managers.sh	/^        function pacman-fzf-install(){ $/;"	f
pacman-fzf-install-by-group	aliases/.bash_aliases.d/package_managers.sh	/^        function pacman-fzf-install-by-group(){ $/;"	f
pacman-fzf-list-files-installed	aliases/.bash_aliases.d/package_managers.sh	/^        function pacman-fzf-list-files-installed(){ $/;"	f
pacman-fzf-remove	aliases/.bash_aliases.d/package_managers.sh	/^        function pacman-fzf-remove(){ $/;"	f
pacman-install	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-install="sudo pacman -S"$/;"	a
pacman-list-AUR-installed	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-list-AUR-installed="pacman -Qm"$/;"	a
pacman-list-groups	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-list-groups="pacman -Sg" $/;"	a
pacman-list-installed	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-list-installed="pacman -Q"$/;"	a
pacman-list-installed-grouped	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-list-installed-grouped="pacman -Q --groups" $/;"	a
pacman-list-installed-native	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-list-installed-native="pacman -Qn" $/;"	a
pacman-refresh-update	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-refresh-update="sudo pacman -Syu"$/;"	a
pacman-remove	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-remove="sudo pacman -R"$/;"	a
pacman-remove-dependencies	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-remove-dependencies="sudo pacman -Rs"$/;"	a
pacman-rm-lock	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-rm-lock="sudo rm \/var\/lib\/pacman\/db.lck"$/;"	a
pacman-search	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-search="pacman -Ss"$/;"	a
pacman-update	aliases/.bash_aliases.d/package_managers.sh	/^    alias pacman-update="sudo pacman -Su"$/;"	a
pamac-checkupdates	aliases/.bash_aliases.d/package_managers.sh	/^        alias pamac-checkupdates="pamac checkupdates -a"$/;"	a
pamac-clear-cache	aliases/.bash_aliases.d/package_managers.sh	/^        alias pamac-clear-cache="pamac clean"$/;"	a
pamac-forcerefresh	aliases/.bash_aliases.d/package_managers.sh	/^        alias pamac-forcerefresh="pamac update --force-refresh && pamac upgrade --force-refresh"$/;"	a
pamac-fzf-install-by-group	aliases/.bash_aliases.d/package_managers.sh	/^        function pamac-fzf-install-by-group(){ $/;"	f
pamac-fzf-list-files	aliases/.bash_aliases.d/package_managers.sh	/^        function pamac-fzf-list-files(){ $/;"	f
pamac-fzf-list-files-installed	aliases/.bash_aliases.d/package_managers.sh	/^        function pamac-fzf-list-files-installed(){ $/;"	f
pamac-fzf-remove	aliases/.bash_aliases.d/package_managers.sh	/^        function pamac-fzf-remove(){ $/;"	f
pamac-fzf-remove-package	aliases/.bash_aliases.d/package_managers.sh	/^        function pamac-fzf-remove-package(){$/;"	f
pamac-list-groups	aliases/.bash_aliases.d/package_managers.sh	/^        alias pamac-list-groups="pamac list --groups" $/;"	a
pamac-list-installed	aliases/.bash_aliases.d/manjaro.sh	/^alias pamac-list-installed="pamac list --installed "$/;"	a
pamac-list-installed	aliases/.bash_aliases.d/package_managers.sh	/^        alias pamac-list-installed="pamac list --installed" $/;"	a
pamac-list-installed-AUR	aliases/.bash_aliases.d/package_managers.sh	/^        alias pamac-list-installed-AUR="pamac list --foreign" $/;"	a
pamac-remove-orphans	aliases/.bash_aliases.d/package_managers.sh	/^        alias pamac-remove-orphans="pamac remove -o" $/;"	a
pamac-search-aur	aliases/.bash_aliases.d/package_managers.sh	/^        alias pamac-search-aur="pamac search --aur"$/;"	a
pamac-update	aliases/.bash_aliases.d/package_managers.sh	/^        alias pamac-update="pamac update"$/;"	a
pamac-update-yes	aliases/.bash_aliases.d/package_managers.sh	/^        alias pamac-update-yes="yes | pamac update"$/;"	a
pamac-upgrade	aliases/.bash_aliases.d/package_managers.sh	/^        alias pamac-upgrade="pamac upgrade"$/;"	a
pamac-upgrade-yes	aliases/.bash_aliases.d/package_managers.sh	/^        alias pamac-upgrade-yes="yes | pamac upgrade"$/;"	a
paste dest	ranger/.config/ranger/rc.conf	/^map p'<any> paste dest=%any_path$/;"	k
paste dest	ranger/.config/ranger/rc.conf	/^map p`<any> paste dest=%any_path$/;"	k
permit nopass keepenv	doas/doas.conf	/^permit nopass keepenv :wheel $/;"	k
php	ranger/.config/ranger/rifle.conf	/^!mime ^text, label editor, ext xml|json|csv|tex|py|pl|rb|js|sh|php = "${VISUAL:-$EDITOR}" -- "$@/;"	k
php	ranger/.config/ranger/rifle.conf	/^!mime ^text, label pager,  ext xml|json|csv|tex|py|pl|rb|js|sh|php = "$PAGER" -- "$@"$/;"	k
php	ranger/.config/ranger/rifle.conf	/^label editor, !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php  = "${VISUAL:-$EDITOR}" -- "/;"	k
php	ranger/.config/ranger/rifle.conf	/^label pager,  !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php  = "$PAGER" -- "$@"$/;"	k
pihole_update	aliases/.bash_aliases.d/variety.sh	/^alias pihole_update="cd ~\/Applications\/docker-pi-hole && docker_update"$/;"	a
pip-clear-cache-all	aliases/.bash_aliases.d/python.sh	/^alias pip-clear-cache-all="pip cache purge"$/;"	a
pip-freeze-version	aliases/.bash_aliases.d/python.sh	/^alias pip-freeze-version="pip freeze"$/;"	a
pip-install-project	aliases/.bash_aliases.d/python.sh	/^alias pip-install-project="pip install ."$/;"	a
pip-install-test	aliases/.bash_aliases.d/python.sh	/^alias pip-install-test="pip install -i https:\/\/test.pypi.org\/simple\/ "$/;"	a
pip-upgrade	aliases/.bash_aliases.d/package_managers.sh	/^    alias pip-upgrade="python3 -m pip install --upgrade pip"$/;"	a
pipewire_r	install_pipewire.sh	/^pipewire_r(){ $/;"	f
pipewiresh	install_pipewire.sh	/^pipewiresh(){$/;"	f
pop_element	download_git_directory.sh	/^function pop_element() {$/;"	f
ports-listen-tcp	aliases/.bash_aliases.d/variety.sh	/^    alias ports-listen-tcp="ss -nlt"$/;"	a
position	ranger/.config/ranger/rc.conf	/^map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7/;"	k
ppa_verification	aliases/.bash_aliases.d/package_managers.sh	/^            ppa_verification()$/;"	f
ppa_verification	checks/check_system.sh	/^    ppa_verification()$/;"	f
print-path-to-prompt	aliases/.bash_aliases.d/fzf-rifle.sh	/^function print-path-to-prompt(){$/;"	f
print-path-to-prompt	aliases/.bash_aliases.d/general.sh	/^function print-path-to-prompt(){$/;"	f
print-path-to-prompt	aliases/.bash_aliases.d/systemctl.sh	/^function print-path-to-prompt(){$/;"	f
print-path-to-prompt	fzf/.bash_aliases.d/fzf-rifle.sh	/^function print-path-to-prompt(){$/;"	f
ps11	install_aliases.sh	/^ps11(){$/;"	f
ps1_r	install_aliases.sh	/^ps1_r(){ $/;"	f
pthon	install_aliases.sh	/^    pthon(){$/;"	f
public_ip_host	neofetch/.config/neofetch/config.conf	/^public_ip_host="http:\/\/ident.me"$/;"	k
public_ip_timeout	neofetch/.config/neofetch/config.conf	/^public_ip_timeout=2$/;"	k
put	ranger/.config/ranger/rifle.conf	/^label trash, has trash-put = trash-put -- "$@"$/;"	k
pw-dewire	pipewire/.bash_aliases.d/pipewire.sh	/^function pw-dewire(){$/;"	f
pw-savewires	pipewire/.bash_aliases.d/pipewire.sh	/^function pw-savewires(){$/;"	f
python-activate-venv	aliases/.bash_aliases.d/python.sh	/^alias python-activate-venv="source venv\/bin\/activate"$/;"	a
python-deactivate-venv	aliases/.bash_aliases.d/python.sh	/^alias python-deactivate-venv="deactivate"$/;"	a
python-pip-clear-cache-all	aliases/.bash_aliases.d/python.sh	/^alias python-pip-clear-cache-all="pip cache purge"$/;"	a
python-pip-install-project	aliases/.bash_aliases.d/python.sh	/^alias python-pip-install-project="pip install ."$/;"	a
python-pip-install-test	aliases/.bash_aliases.d/python.sh	/^alias python-pip-install-test="pip install -i https:\/\/test.pypi.org\/simple\/ "$/;"	a
python-twine-upload	aliases/.bash_aliases.d/python.sh	/^alias python-twine-upload="if type deactivate &> \/dev\/null; then deactivate; fi; eval $build &/;"	a
python-twine-upload-test	aliases/.bash_aliases.d/python.sh	/^alias python-twine-upload-test="if type deactivate &> \/dev\/null; then deactivate; fi; eval $bu/;"	a
python-venv	aliases/.bash_aliases.d/python.sh	/^alias python-venv="python3 -m venv venv; source venv\/bin\/activate"$/;"	a
q	aliases/.bash_aliases.d/general.sh	/^alias q='exit'$/;"	a
r	aliases/.bash_aliases.d/general.sh	/^    alias r="stty sane && source ~\/.bashrc"$/;"	a
ranger	aliases/.bash_aliases.d/ranger.sh	/^alias ranger='ranger 2> \/dev\/null'$/;"	a
ranger	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
ranger	ranger/.bash_aliases.d/ranger.sh	/^alias ranger='ranger 2> \/dev\/null'$/;"	a
ranger-aliases	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
ranger-all	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:group
rangr_cnf	install_ranger.sh	/^rangr_cnf() {$/;"	f
reade	aliases/.bash_aliases.d/00-rlwrap_scripts.sh	/^reade(){$/;"	f
reade	rm-prmpt/rm-prompt	/^reade(){$/;"	f
readline	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
receive-mails-csv-file	aliases/.bash_aliases.d/gpg.sh	/^function receive-mails-csv-file(){$/;"	f
receive-mails-csv-file	gpg/.bash_aliases.d/gpg.sh	/^function receive-mails-csv-file(){$/;"	f
redirect-tty-output-to	aliases/.bash_aliases.d/general.sh	/^alias redirect-tty-output-to="exec 1>\/dev\/pts\/"$/;"	a
refresh	aliases/.bash_aliases.d/general.sh	/^alias refresh="watch -n0 --color bash -ic"$/;"	a
refresh	aliases/.bash_aliases.d/general.sh	/^type viddy &> \/dev\/null && alias refresh="viddy --interval 0.1 --disable_auto_save --shell-opt/;"	a
refresh-diff	aliases/.bash_aliases.d/general.sh	/^alias refresh-diff="watch -n0 -d --color bash -ic"$/;"	a
refresh-diff	aliases/.bash_aliases.d/general.sh	/^type viddy &> \/dev\/null && alias refresh="viddy --interval 0.1 --disable_auto_save --shell-opt/;"	a
refresh_rate	neofetch/.config/neofetch/config.conf	/^refresh_rate="on"$/;"	k
regenerate-initrams-all-kernels	aliases/.bash_aliases.d/general.sh	/^alias regenerate-initrams-all-kernels="sudo mkinitcpio -P"$/;"	a
remove-empty-lines	aliases/.bash_aliases.d/general.sh	/^alias remove-empty-lines="sed '\/^[[:space:]]*$\/d'"$/;"	a
remove-whitespace	aliases/.bash_aliases.d/general.sh	/^alias remove-whitespace='| xargs'$/;"	a
restart-bluetooth	aliases/.bash_aliases.d/systemctl.sh	/^alias restart-bluetooth="systemctl restart bluetooth.service"$/;"	a
restart-display	aliases/.bash_aliases.d/systemctl.sh	/^alias restart-display="sudo systemctl restart display-manager"  $/;"	a
restart-docker	aliases/.bash_aliases.d/systemctl.sh	/^    alias restart-docker="sudo systemctl restart  $servs"$/;"	a
restart-network	aliases/.bash_aliases.d/systemctl.sh	/^alias restart-network="systemctl restart NetworkManager"  $/;"	a
restart-pipewire	aliases/.bash_aliases.d/systemctl.sh	/^    alias restart-pipewire="systemctl restart --user $servs"$/;"	a
restart-samba	aliases/.bash_aliases.d/systemctl.sh	/^    alias restart-samba="sudo systemctl restart $servs"$/;"	a
restart-sshd	aliases/.bash_aliases.d/systemctl.sh	/^    alias restart-sshd="sudo systemctl restart $servs"  $/;"	a
restart-tor	aliases/.bash_aliases.d/systemctl.sh	/^    alias restart-tor="sudo systemctl restart  $servs"$/;"	a
rg	aliases/.bash_aliases.d/general.sh	/^alias rg='rg --color=always'$/;"	a
rg-search-and-replace	aliases/.bash_aliases.d/variety.sh	/^    function rg-search-and-replace() {$/;"	f
right	ranger/.config/ranger/rc.conf	/^cmap <a-f> eval fm.ui.console.move_word(right=1)$/;"	k
right	ranger/.config/ranger/rc.conf	/^cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)$/;"	k
right	ranger/.config/ranger/rc.conf	/^cmap <home>  eval fm.ui.console.move(right=0, absolute=True)$/;"	k
right	ranger/.config/ranger/rc.conf	/^cmap <right> eval fm.ui.console.move(right=1)$/;"	k
ripgrep-dir	fzf/.bash_aliases.d/ripgrep-directory.sh	/^ripgrep-dir() {$/;"	f
ripgrep_conf	install_ripgrep.sh	/^    function ripgrep_conf(){$/;"	f
ripgrep_conf_r	install_ripgrep.sh	/^    function ripgrep_conf_r(){$/;"	f
rm	aliases/.bash_aliases.d/general.sh	/^alias rm="rm-prompt"$/;"	a
rm-all-folder	aliases/.bash_aliases.d/general.sh	/^alias rm-all-folder="rm -rv .\/*";$/;"	a
rm-all-hidden	aliases/.bash_aliases.d/general.sh	/^alias rm-all-hidden="rm -rv .[!.]* *";$/;"	a
rm-prompt	rm-prmpt/rm-prompt	/^function rm-prompt(){$/;"	f
rm-shred	aliases/.bash_aliases.d/general.sh	/^alias rm-shred="shred -vzn $shred_iterates -u"$/;"	a
rules_conf	install_polkit_wheel.sh	/^    function rules_conf(){$/;"	f
rvim	vim/.bash_aliases.d/vim_nvim.sh	/^    function rvim(){ nvr --remote $@; }$/;"	f
ryujinx	flatpak/.bash_aliases.d/flatpacks.sh	/^    alias ryujinx='GDK_BACKEND=x11 flatpak run org.ryujinx.Ryujinx' $/;"	a
s	vim/.config/nvim/init.vim	/^nnoremap s v$/;"	m
s	vim/.config/nvim/init.vim	/^vnoremap s v$/;"	m
s:PluginAdapter	vim/.config/nvim/plug_lazy_adapter.vim	/^function! s:PluginAdapter(...)$/;"	f
s:VimOSCYankPostCallback	vim/.config/nvim/init.vim	/^    function! s:VimOSCYankPostCallback(event)$/;"	f
s:VimOSCYankPostRegisters	vim/.config/nvim/init.vim	/^    let s:VimOSCYankPostRegisters = ['', '+', '*']$/;"	v
s:deregister	vim/.config/nvim/plug_lazy_adapter.vim	/^function! s:deregister(name)$/;"	f
s:installPluginManager	vim/.config/nvim/plug_lazy_adapter.vim	/^function! s:installPluginManager()$/;"	f
s:loadPluginOnEvent	vim/.config/nvim/plug_lazy_adapter.vim	/^function! s:loadPluginOnEvent(name, event)$/;"	f
s:plugs	vim/.config/nvim/plug_lazy_adapter.vim	/^let s:plugs = {}$/;"	v
s:removeUnsupportedArgs	vim/.config/nvim/plug_lazy_adapter.vim	/^function! s:removeUnsupportedArgs(args)$/;"	f
separator	neofetch/.config/neofetch/config.conf	/^separator="->"$/;"	k
serber	aliases/.bash_aliases.d/ssh.sh	/^alias serber="ssh -XY -i $ssh_file $user@$ip"$/;"	a
serber1	aliases/.bash_aliases.d/ssh.sh	/^alias serber1="ssh -XY -p 4000 -i $ssh_file1 $user1@$ip1"$/;"	a
serber_mnt	aliases/.bash_aliases.d/ssh.sh	/^serber_mnt() {$/;"	f
serber_mnt1	aliases/.bash_aliases.d/ssh.sh	/^serber_mnt1(){$/;"	f
serber_unmnt	aliases/.bash_aliases.d/ssh.sh	/^alias serber_unmnt="fusermount3 -u \/mnt\/mount1\/"$/;"	a
serber_unmnt1	aliases/.bash_aliases.d/ssh.sh	/^alias serber_unmnt1="fusermount3 -u \/mnt\/mount2\/"$/;"	a
service-enable-now	aliases/.bash_aliases.d/systemctl.sh	/^service-enable-now(){$/;"	f
service-restart	aliases/.bash_aliases.d/systemctl.sh	/^service-restart(){$/;"	f
service-start	aliases/.bash_aliases.d/systemctl.sh	/^service-start(){$/;"	f
service-status	aliases/.bash_aliases.d/systemctl.sh	/^alias service-status="systemctl status"$/;"	a
service-stop	aliases/.bash_aliases.d/systemctl.sh	/^alias service-stop="systemctl --user stop "$/;"	a
service-system-create	aliases/.bash_aliases.d/systemctl.sh	/^function service-system-create(){$/;"	f
service-system-disable	aliases/.bash_aliases.d/systemctl.sh	/^alias service-system-disable="sudo systemctl disable "$/;"	a
service-system-disable-now	aliases/.bash_aliases.d/systemctl.sh	/^alias service-system-disable-now="sudo systemctl disable --now "$/;"	a
service-system-list-files	aliases/.bash_aliases.d/systemctl.sh	/^alias service-system-list-files="sudo systemctl list-unit-files"$/;"	a
service-system-list-services	aliases/.bash_aliases.d/systemctl.sh	/^alias service-system-list-services="sudo systemctl list-units --type=service"$/;"	a
service-system-list-sockets	aliases/.bash_aliases.d/systemctl.sh	/^alias service-system-list-sockets="sudo systemctl list-units --type=socket"$/;"	a
service-system-list-units	aliases/.bash_aliases.d/systemctl.sh	/^alias service-system-list-units="sudo systemctl list-units --all"$/;"	a
service-system-log-unit	aliases/.bash_aliases.d/systemctl.sh	/^alias service-system-log-unit="sudo journalctl -x -u"$/;"	a
service-system-logs	aliases/.bash_aliases.d/systemctl.sh	/^alias service-system-logs="sudo journalctl -x"$/;"	a
service-system-logs-boot	aliases/.bash_aliases.d/systemctl.sh	/^alias service-system-logs-boot="sudo journalctl -xb"$/;"	a
service-system-logs-boot-reverse	aliases/.bash_aliases.d/systemctl.sh	/^alias service-system-logs-boot-reverse="sudo journalctl -xrb"$/;"	a
service-system-logs-live	aliases/.bash_aliases.d/systemctl.sh	/^alias service-system-logs-live="sudo journalctl -xf"$/;"	a
service-system-logs-reverse	aliases/.bash_aliases.d/systemctl.sh	/^alias service-system-logs-reverse="sudo journalctl -xr"$/;"	a
service-system-reloadall	aliases/.bash_aliases.d/systemctl.sh	/^alias service-system-reloadall="sudo systemctl daemon-reload"$/;"	a
service-systemd-restart	aliases/.bash_aliases.d/systemctl.sh	/^alias service-systemd-restart="sudo systemctl restart"$/;"	a
service-user-create	aliases/.bash_aliases.d/systemctl.sh	/^function service-user-create(){$/;"	f
service-user-disable	aliases/.bash_aliases.d/systemctl.sh	/^alias service-user-disable="systemctl --user disable "$/;"	a
service-user-disable-now	aliases/.bash_aliases.d/systemctl.sh	/^alias service-user-disable-now="systemctl --user disable --now "$/;"	a
service-user-list-files	aliases/.bash_aliases.d/systemctl.sh	/^alias service-user-list-files="systemctl --user list-unit-files"$/;"	a
service-user-list-services	aliases/.bash_aliases.d/systemctl.sh	/^alias service-user-list-services="systemctl --user list-units --type=service"$/;"	a
service-user-list-sockets	aliases/.bash_aliases.d/systemctl.sh	/^alias service-user-list-sockets="systemctl --user list-units --type=socket"$/;"	a
service-user-list-units	aliases/.bash_aliases.d/systemctl.sh	/^alias service-user-list-units="systemctl --user list-units --all"$/;"	a
service-user-log-unit	aliases/.bash_aliases.d/systemctl.sh	/^alias service-user-log-unit="journalctl -x -u"$/;"	a
service-user-logs	aliases/.bash_aliases.d/systemctl.sh	/^alias service-user-logs="journalctl -x"$/;"	a
service-user-logs-boot	aliases/.bash_aliases.d/systemctl.sh	/^alias service-user-logs-boot="journalctl -xb"$/;"	a
service-user-logs-boot-reverse	aliases/.bash_aliases.d/systemctl.sh	/^alias service-user-logs-boot-reverse="journalctl -xrb"$/;"	a
service-user-logs-live	aliases/.bash_aliases.d/systemctl.sh	/^alias service-user-logs-live="journalctl -xf"$/;"	a
service-user-logs-reverse	aliases/.bash_aliases.d/systemctl.sh	/^alias service-user-logs-reverse="journalctl -xr"$/;"	a
service-user-reloadall	aliases/.bash_aliases.d/systemctl.sh	/^alias service-user-reloadall="systemctl --user daemon-reload"$/;"	a
shell-keybinds	install.sh	/^shell-keybinds() {$/;"	f
shell-keybinds_r	install.sh	/^shell-keybinds_r(){ $/;"	f
shell_path	neofetch/.config/neofetch/config.conf	/^shell_path="off"$/;"	k
shell_version	neofetch/.config/neofetch/config.conf	/^shell_version="on"$/;"	k
shutdown-now	aliases/.bash_aliases.d/general.sh	/^alias shutdown-now='shutdown now'$/;"	a
song_format	neofetch/.config/neofetch/config.conf	/^song_format="%artist% - %album% - %title%"$/;"	k
song_shorthand	neofetch/.config/neofetch/config.conf	/^song_shorthand="on"$/;"	k
soundux	aliases/.bash_aliases.d/flatpacks.sh	/^        alias soundux='GDK_BACKEND=x11 flatpak run --file-forwarding io.github.Soundux'$/;"	a
soundux	flatpak/.bash_aliases.d/flatpacks.sh	/^        alias soundux='GDK_BACKEND=x11 flatpak run --file-forwarding io.github.Soundux'$/;"	a
speed_shorthand	neofetch/.config/neofetch/config.conf	/^speed_shorthand="off"$/;"	k
speed_type	neofetch/.config/neofetch/config.conf	/^speed_type="bios_limit"$/;"	k
sqlite_show_query	ranger/.config/ranger/scope.sh	/^            sqlite_show_query() {$/;"	f
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:aliases
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:completions
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:ctags
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:envvars
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:fzf-alias
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:gpg
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:gpg-alias
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:keybinds
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:keybinds-bash
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:kitty
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:lazygit
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:lazygit-alias
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:ranger
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:ranger-aliases
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:readline
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:tmux
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:tmux-alias
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:vim
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:vim-alias
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:vim-completion
src	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:xterm
ssh	aliases/.bash_aliases.d/ssh.sh	/^[ "$TERM" = "xterm-kitty" ] && alias ssh="kitty +kitten ssh"$/;"	a
ssh-config	aliases/.bash_aliases.d/ssh.sh	/^alias ssh-config="$EDITOR ~\/.ssh\/config"$/;"	a
ssh_key_and_add_to_agent_by_host	aliases/.bash_aliases.d/ssh.sh	/^ssh_key_and_add_to_agent_by_host() {$/;"	f
ssh_r	install_aliases.sh	/^ssh_r(){ $/;"	f
sshh	install_aliases.sh	/^sshh(){$/;"	f
starship-presets	aliases/.bash_aliases.d/starship.sh	/^function starship-presets() {$/;"	f
starship-uninstall	aliases/.bash_aliases.d/starship.sh	/^function starship-uninstall() {$/;"	f
start-docker	aliases/.bash_aliases.d/systemctl.sh	/^    alias start-docker="sudo systemctl start  $servs"$/;"	a
start-pipewire	aliases/.bash_aliases.d/systemctl.sh	/^    alias start-pipewire="systemctl start --user $servs"$/;"	a
start-samba	aliases/.bash_aliases.d/systemctl.sh	/^    alias start-samba="sudo systemctl start $servs"$/;"	a
start-sshd	aliases/.bash_aliases.d/systemctl.sh	/^    alias start-sshd="sudo systemctl start $servs"$/;"	a
start-tor	aliases/.bash_aliases.d/systemctl.sh	/^    alias start-tor="sudo systemctl start  $servs"$/;"	a
status-bluetooth	aliases/.bash_aliases.d/systemctl.sh	/^alias status-bluetooth="systemctl status bluetooth.service"$/;"	a
status-display	aliases/.bash_aliases.d/systemctl.sh	/^alias status-display="sudo systemctl status display-manager"  $/;"	a
status-docker-service	aliases/.bash_aliases.d/systemctl.sh	/^    alias status-docker-service="sudo systemctl status $servs"$/;"	a
status-network	aliases/.bash_aliases.d/systemctl.sh	/^alias status-network="systemctl status NetworkManager"  $/;"	a
status-pipewire	aliases/.bash_aliases.d/systemctl.sh	/^    alias status-pipewire="systemctl status --user $servs"$/;"	a
status-samba-service	aliases/.bash_aliases.d/systemctl.sh	/^    alias status-samba-service="sudo systemctl status $servs"$/;"	a
status-sshd	aliases/.bash_aliases.d/systemctl.sh	/^    alias status-sshd="sudo systemctl status $servs"  $/;"	a
status-tor	aliases/.bash_aliases.d/variety.sh	/^    alias status-tor="nyx"$/;"	a
status-tor-service	aliases/.bash_aliases.d/systemctl.sh	/^    alias status-tor-service="sudo systemctl status $servs"$/;"	a
stdout	neofetch/.config/neofetch/config.conf	/^stdout="off"$/;"	k
stop-docker	aliases/.bash_aliases.d/systemctl.sh	/^    alias stop-docker="sudo systemctl stop  $servs"$/;"	a
stop-pipewire	aliases/.bash_aliases.d/systemctl.sh	/^    alias stop-pipewire="systemctl stop --user $servs"$/;"	a
stop-samba	aliases/.bash_aliases.d/systemctl.sh	/^    alias stop-samba="sudo systemctl stop $servs"$/;"	a
stop-sshd	aliases/.bash_aliases.d/systemctl.sh	/^    alias stop-sshd="sudo systemctl stop $servs"$/;"	a
stop-tor	aliases/.bash_aliases.d/systemctl.sh	/^    alias stop-tor="sudo systemctl stop  $servs"$/;"	a
stow-adopt	aliases/.bash_aliases.d/variety.sh	/^alias stow-adopt="stow .\/ -t ~\/ --adopt"$/;"	a
style	neofetch/.config/neofetch/config.conf	/^end_tree() { style='└─' tree_item "$@"; }$/;"	k
style bg	tmux/.tmux.conf	/^set-option -g pane-active-border-style bg=black,fg=brightgreen #base01$/;"	k
style bg	tmux/.tmux.conf	/^set-option -g pane-border-style bg=black,fg=brightgreen #base02$/;"	k
style fg	tmux/.tmux.conf	/^set-option -g message-style fg=brightred,bg=black #orange and base01$/;"	k
style fg	tmux/.tmux.conf	/^set-option -g status-style fg=yellow,bg=black #yellow and base02$/;"	k
style fg	tmux/.tmux.conf	/^set-window-option -g window-status-bell-style fg=black,bg=red #base02, red$/;"	k
style fg	tmux/.tmux.conf	/^set-window-option -g window-status-current-style fg=brightred,bg=default #orange and default$/;"	k
style fg	tmux/.tmux.conf	/^set-window-option -g window-status-style fg=brightblue,bg=default #base0 and default$/;"	k
sudo-add-envvar-exception	aliases/.bash_aliases.d/sudo.sh	/^function sudo-add-envvar-exception(){$/;"	f
sudo-edit-sudoers	aliases/.bash_aliases.d/sudo.sh	/^alias sudo-edit-sudoers="sudo visudo"$/;"	a
sudo-keep-env	aliases/.bash_aliases.d/sudo.sh	/^alias sudo-keep-env="sudo -E"$/;"	a
sudo-lock-root-passwd	aliases/.bash_aliases.d/sudo.sh	/^alias sudo-lock-root-passwd="sudo passwd -l root"$/;"	a
sudo-remove-user-from-sudo-groups	aliases/.bash_aliases.d/sudo.sh	/^function sudo-remove-user-from-sudo-groups(){$/;"	f
sudo-reset-cooldown	aliases/.bash_aliases.d/sudo.sh	/^alias sudo-reset-cooldown="faillock --user $USER --reset"$/;"	a
sudo-set-root-passwd	aliases/.bash_aliases.d/sudo.sh	/^alias sudo-set-root-passwd="sudo passwd root"$/;"	a
sudo-shell	aliases/.bash_aliases.d/sudo.sh	/^alias sudo-shell="sudo -i"$/;"	a
sudoedit	doas/doas.sh	/^alias sudoedit='doasedit '$/;"	a
superman	vim/.bash_aliases.d/vim_nvim.sh	/^    alias superman="man-all-nvim"                                                           $/;"	a
svim	vim/.bash_aliases.d/vim_nvim.sh	/^    alias svim="sudo $VIM"$/;"	a
system-service-enable-now	aliases/.bash_aliases.d/systemctl.sh	/^system-service-enable-now(){$/;"	f
system-service-restart	aliases/.bash_aliases.d/systemctl.sh	/^system-service-restart(){$/;"	f
system-service-start	aliases/.bash_aliases.d/systemctl.sh	/^system-service-start(){$/;"	f
system-service-stop	aliases/.bash_aliases.d/systemctl.sh	/^alias system-service-stop="sudo systemctl stop "$/;"	a
systemctl-running-units-fzf	aliases/.bash_aliases.d/systemctl.sh	/^    function systemctl-running-units-fzf() {$/;"	f
systemd	install_aliases.sh	/^systemd(){$/;"	f
systemd_r	install_aliases.sh	/^systemd_r(){ $/;"	f
t	vim/.config/nvim/init.vim	/^nnoremap t :$/;"	m
t	vim/.config/nvim/init.vim	/^vnoremap t :$/;"	m
tab2space	aliases/.bash_aliases.d/general.sh	/^alias tab2space="tr -s ' '"$/;"	a
tar-create	aliases/.bash_aliases.d/general.sh	/^alias tar-create="tar -cvf"$/;"	a
tar-list	aliases/.bash_aliases.d/general.sh	/^alias tar-list="tar -tvf"$/;"	a
tar-unpack	aliases/.bash_aliases.d/general.sh	/^alias tar-unpack="tar -xvf"$/;"	a
terminal	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has gnome-terminal = gnome-terminal -- "$@"$/;"	k
terminal	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has mate-terminal = mate-terminal -x "$@"$/;"	k
terminal	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has pantheon-terminal = pantheon-terminal -e "$@"$/;"	k
terminal	ranger/.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has xfce4-terminal = xfce4-terminal -x "$@"$/;"	k
terminal_colours	tmux/.bash_aliases.d/tmux.sh	/^alias terminal_colours="curl -s https:\/\/raw.githubusercontent.com\/JohnMorales\/dotfiles\/mast/;"	a
thumbnail_dir	neofetch/.config/neofetch/config.conf	/^thumbnail_dir="${XDG_CACHE_HOME:-${HOME}\/.cache}\/thumbnails\/neofetch"$/;"	k
thunderbird	aliases/.bash_aliases.d/variety.sh	/^    alias thunderbird="kdocker thunderbird"$/;"	a
title_fqdn	neofetch/.config/neofetch/config.conf	/^title_fqdn="off"$/;"	k
tmux	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
tmux-alias	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
tmux-all	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:group
tmuxAttach	tmux/.bash_aliases.d/tmux.sh	/^function tmuxAttach(){$/;"	f
tmuxAttachChooseTree	tmux/.bash_aliases.d/tmux.sh	/^alias tmuxAttachChooseTree="tmux choose-tree -NO"$/;"	a
tmuxDetachedSession	tmux/.bash_aliases.d/tmux.sh	/^function tmuxDetachedSession(){$/;"	f
tmuxKillAllButOne	tmux/.bash_aliases.d/tmux.sh	/^function tmuxKillAllButOne(){$/;"	f
tmuxKillServer	tmux/.bash_aliases.d/tmux.sh	/^alias tmuxKillServer="tmux kill-server"$/;"	a
tmuxListKeybinds	tmux/.bash_aliases.d/tmux.sh	/^alias tmuxListKeybinds="tmux list-keys"$/;"	a
tmuxListSessions	tmux/.bash_aliases.d/tmux.sh	/^alias tmuxListSessions="tmux ls"$/;"	a
tmuxNewSession	tmux/.bash_aliases.d/tmux.sh	/^function tmuxNewSession(){$/;"	f
tmuxShowHooks	tmux/.bash_aliases.d/tmux.sh	/^alias tmuxShowHooks="tmux show-hooks"$/;"	a
tmuxSource	tmux/.bash_aliases.d/tmux.sh	/^alias tmuxSource="tmux source ~\/.tmux.conf"$/;"	a
tor-shell-off	aliases/.bash_aliases.d/variety.sh	/^    alias tor-shell-off="source torsocks off"$/;"	a
tor-shell-on	aliases/.bash_aliases.d/variety.sh	/^    alias tor-shell-on="source torsocks on"$/;"	a
trash	aliases/.bash_aliases.d/general.sh	/^function trash(){$/;"	f
trash-empty	aliases/.bash_aliases.d/general.sh	/^alias trash-empty="gio trash --empty"$/;"	a
trash-list	aliases/.bash_aliases.d/general.sh	/^alias trash-list="gio trash --list"$/;"	a
trash-restore	aliases/.bash_aliases.d/general.sh	/^function trash-restore(){$/;"	f
udev_reload	aliases/.bash_aliases.d/variety.sh	/^alias udev_reload="sudo udevadm control --reload-rules && sudo udevadm trigger"$/;"	a
un7z	aliases/.bash_aliases.d/general.sh	/^alias un7z="7z x"$/;"	a
unbz2	aliases/.bash_aliases.d/general.sh	/^alias unbz2='tar -xvjf'$/;"	a
underline_char	neofetch/.config/neofetch/config.conf	/^underline_char="─"$/;"	k
underline_enabled	neofetch/.config/neofetch/config.conf	/^underline_enabled="on"$/;"	k
ungz	aliases/.bash_aliases.d/general.sh	/^alias ungz='tar -xvzf'$/;"	a
untar	aliases/.bash_aliases.d/general.sh	/^alias untar='tar -xvf'$/;"	a
update-system	aliases/.bash_aliases.d/update-system.sh	/^function update-system() {$/;"	f
update_sysm	install_aliases.sh	/^update_sysm(){$/;"	f
update_sysm_r	install_aliases.sh	/^update_sysm_r(){ $/;"	f
upper1stletter	aliases/.bash_aliases.d/general.sh	/^alias upper1stletter="\\${var^}"$/;"	a
upper2lower	aliases/.bash_aliases.d/general.sh	/^alias upper2lower="tr '[:upper:]' '[:lower:]'"$/;"	a
uptime_shorthand	neofetch/.config/neofetch/config.conf	/^uptime_shorthand="on"$/;"	k
url_get_dirs	download_git_directory.sh	/^function url_get_dirs() {$/;"	f
v	vim/.config/nvim/init.vim	/^nnoremap v "+p$/;"	m
v	vim/.config/nvim/init.vim	/^vnoremap v "+p  $/;"	m
variable,variables	ctags/.ctags	/^--regex-sh=\/^[ \\t]*(local)?[ \\t]*([A-Za-z0-9_-]+)=\/\\2\/v,variable,variables\/$/;"	k
variti	install_aliases.sh	/^variti(){$/;"	f
variti_r	install_aliases.sh	/^variti_r(){ $/;"	f
videotomp3	aliases/.bash_aliases.d/variety.sh	/^    function videotomp3(){$/;"	f
vim	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
vim	vim/.bash_aliases.d/vim_nvim.sh	/^    alias vim="$VIM -u ~\/.config\/nvim\/init.vim" $/;"	a
vim-alias	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
vim-all	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	a	object:group
vim-checkhealth	vim/.bash_aliases.d/vim_nvim.sh	/^    alias vim-checkhealth="$VIM +checkhealth"$/;"	a
vim-completion	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
vim-diff	vim/.bash_aliases.d/vim_nvim.sh	/^    alias vim-diff="$VIM -d" $/;"	a
vim-dir	vim/.bash_aliases.d/vim_nvim.sh	/^    alias vim-dir="$VIM .\/"$/;"	a
vim-fzf	vim/.bash_aliases.d/vim_nvim.sh	/^        function vim-fzf(){$/;"	f
vim-noconf	vim/.bash_aliases.d/vim_nvim.sh	/^    alias vim-noconf="$VIM -Nu NONE"$/;"	a
vimsh	install_nvim.sh	/^vimsh(){$/;"	f
vimsh_r	install_nvim.sh	/^vimsh_r(){ $/;"	f
vlc_folder	aliases/.bash_aliases.d/variety.sh	/^vlc_folder(){$/;"	f
w	vim/.config/nvim/init.vim	/^vnoremap w iW$/;"	m
weather	aliases/.bash_aliases.d/general.sh	/^alias weather="inxi -w"$/;"	a
weather-full	aliases/.bash_aliases.d/general.sh	/^alias weather-full="curl wttr.in | $PAGER"$/;"	a
wget	aliases/.bash_aliases.d/check_system.sh	/^    alias wget='wget.exe' $/;"	a
wget	checks/check_system.sh	/^    alias wget='wget.exe' $/;"	a
wget	install_cygwin.sh	/^    alias wget='wget.exe' $/;"	a
where_cmd	aliases/.bash_aliases.d/check_system.sh	/^    function where_cmd() { $/;"	f
where_cmd	checks/check_system.sh	/^    function where_cmd() { $/;"	f
wick	aliases/.bash_aliases.d/variety.sh	/^alias wick="sudo wickrme --no-sandbox"$/;"	a
wifi-disable	aliases/.bash_aliases.d/general.sh	/^    alias wifi-disable='nmcli radio wifi off'$/;"	a
wifi-enable	aliases/.bash_aliases.d/general.sh	/^    alias wifi-enable='nmcli radio wifi on'$/;"	a
word2line	aliases/.bash_aliases.d/general.sh	/^alias word2line="tr ' ' '\\n'"$/;"	a
x	aliases/.bash_aliases.d/general.sh	/^alias x="cd .."$/;"	a
xclip-print-to-prompt	keybinds/.keybinds.d/keybinds.bash	/^    function xclip-print-to-prompt(){$/;"	f
xoffset	neofetch/.config/neofetch/config.conf	/^xoffset=14$/;"	k
xresources	install.sh	/^xresources() {$/;"	f
xresources_r	install.sh	/^xresources_r(){$/;"	f
xterm	copy-to/confs.json	/^{"group": {"tmux-all": ["tmux", "tmux-alias"], "vim-all": ["vim", "vim-alias", "vim-completion"]/;"	o
y	vim/.config/nvim/init.vim	/^nnoremap y "+^y$/;"	m
y	vim/.config/nvim/init.vim	/^vnoremap y "+y$/;"	m
yay-clear-cache	aliases/.bash_aliases.d/package_managers.sh	/^        alias yay-clear-cache="yay -Sc"$/;"	a
yay-fzf-install	aliases/.bash_aliases.d/package_managers.sh	/^        function yay-fzf-install(){ $/;"	f
yay-fzf-remove	aliases/.bash_aliases.d/package_managers.sh	/^        function yay-fzf-remove(){ $/;"	f
yay-install	aliases/.bash_aliases.d/package_managers.sh	/^        alias yay-install="yay -Su"$/;"	a
yay-list-all-aur	aliases/.bash_aliases.d/package_managers.sh	/^        alias yay-list-all-aur="yay -Slaq"$/;"	a
yay-list-installed	aliases/.bash_aliases.d/package_managers.sh	/^        alias yay-list-installed="yay -Q" $/;"	a
yay-remove	aliases/.bash_aliases.d/package_managers.sh	/^        alias yay-remove="yay -R"$/;"	a
yay-update	aliases/.bash_aliases.d/package_managers.sh	/^        alias yay-update="yay -Su"$/;"	a
yay-update-yes	aliases/.bash_aliases.d/package_managers.sh	/^        alias yay-update-yes="yes | yay -Su"$/;"	a
yes_edit_no	aliases/.bash_aliases.d/00-rlwrap_scripts.sh	/^function yes_edit_no(){$/;"	f
yes_no	aliases/.bash_aliases.d/00-rlwrap_scripts.sh	/^function yes_no(){$/;"	f
yoffset	neofetch/.config/neofetch/config.conf	/^yoffset=14$/;"	k
youtube-download	aliases/.bash_aliases.d/youtube.sh	/^    alias youtube-download="yt-dl"$/;"	a
yt-dl	aliases/.bash_aliases.d/youtube.sh	/^    function yt-dl(){$/;"	f
ytbe	install_yt-dlp.sh	/^ytbe(){$/;"	f
yuzu	flatpak/.bash_aliases.d/flatpacks.sh	/^	alias yuzu='GDK_BACKEND=x11 flatpak run --file-forwarding org.yuzu_emu.yuzu'$/;"	a
yy	vim/.config/nvim/init.vim	/^nnoremap yy "+^yg_$/;"	m
zoom	flatpak/.bash_aliases.d/flatpacks.sh	/^	alias zoom='flatpak run --file-forwarding us.zoom.Zoom'$/;"	a
{	vim/.config/nvim/init.vim	/^vnoremap {      di{}<Esc>hpgv $/;"	m
²	vim/.config/nvim/init.vim	/^nnoremap ² ~$/;"	m
